//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:2.0.50727.5456
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAS.AgileWorkloadTracker.Linq {
	using System;
	
	
	internal partial class Entities : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public Entities(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		/// <summary>
		/// Use this list to track upcoming events, status updates or other team news.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Announcements")]
		public Microsoft.SharePoint.Linq.EntityList<Anons> Announcements {
			get {
				return this.GetList<Anons>("Announcements");
			}
		}
		
		/// <summary>
		/// Use the Calendar list to keep informed of upcoming meetings, deadlines, and other important events.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Calendar")]
		public Microsoft.SharePoint.Linq.EntityList<CalendarWydarzenie> Calendar {
			get {
				return this.GetList<CalendarWydarzenie>("Calendar");
			}
		}
		
		/// <summary>
		/// Contracts List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Contracts")]
		public Microsoft.SharePoint.Linq.EntityList<Contracts> Contracts {
			get {
				return this.GetList<Contracts>("Contracts");
			}
		}
		
		/// <summary>
		/// Estimation List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Estimation")]
		public Microsoft.SharePoint.Linq.EntityList<Estimation> Estimation {
			get {
				return this.GetList<Estimation>("Estimation");
			}
		}
		
		/// <summary>
		/// Use the Links list for links to Web pages that your team members will find interesting or useful.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Links")]
		public Microsoft.SharePoint.Linq.EntityList<Łącze> Links {
			get {
				return this.GetList<Łącze>("Links");
			}
		}
		
		/// <summary>
		/// Use the master page gallery to store master pages. The master pages in this gallery are available to this site and any sites underneath it.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Master Page Gallery")]
		public Microsoft.SharePoint.Linq.EntityList<MasterPageGalleryStronaWzorcowa> MasterPageGallery {
			get {
				return this.GetList<MasterPageGalleryStronaWzorcowa>("Master Page Gallery");
			}
		}
		
		/// <summary>
		/// Milestone List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Milestone")]
		public Microsoft.SharePoint.Linq.EntityList<Milestone> Milestone {
			get {
				return this.GetList<Milestone>("Milestone");
			}
		}
		
		/// <summary>
		/// Partners List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Partners")]
		public Microsoft.SharePoint.Linq.EntityList<Partners> Partners {
			get {
				return this.GetList<Partners>("Partners");
			}
		}
		
		/// <summary>
		/// Priority List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Priority")]
		public Microsoft.SharePoint.Linq.EntityList<Priority> Priority {
			get {
				return this.GetList<Priority>("Priority");
			}
		}
		
		/// <summary>
		/// Project Resources List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Project resources")]
		public Microsoft.SharePoint.Linq.EntityList<ProjectResources> ProjectResources {
			get {
				return this.GetList<ProjectResources>("Project resources");
			}
		}
		
		/// <summary>
		/// Project List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Projects")]
		public Microsoft.SharePoint.Linq.EntityList<Projects> Projects {
			get {
				return this.GetList<Projects>("Projects");
			}
		}
		
		/// <summary>
		/// Resolution List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Resolution")]
		public Microsoft.SharePoint.Linq.EntityList<Resolution> Resolution {
			get {
				return this.GetList<Resolution>("Resolution");
			}
		}
		
		/// <summary>
		/// Resources List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Resources")]
		public Microsoft.SharePoint.Linq.EntityList<Resources> Resources {
			get {
				return this.GetList<Resources>("Resources");
			}
		}
		
		/// <summary>
		/// Share a document with the team by adding it to this document library.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Shared Documents")]
		public Microsoft.SharePoint.Linq.EntityList<Dokument> SharedDocuments {
			get {
				return this.GetList<Dokument>("Shared Documents");
			}
		}
		
		/// <summary>
		/// Use this library to store files which are included on pages within this site, such as images on Wiki pages.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Assets")]
		public Microsoft.SharePoint.Linq.EntityList<Dokument> SiteAssets {
			get {
				return this.GetList<Dokument>("Site Assets");
			}
		}
		
		/// <summary>
		/// Use this library to create and store pages on this site.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Pages")]
		public Microsoft.SharePoint.Linq.EntityList<StronaTypuWiki> SitePages {
			get {
				return this.GetList<StronaTypuWiki>("Site Pages");
			}
		}
		
		/// <summary>
		/// Stage List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Stage")]
		public Microsoft.SharePoint.Linq.EntityList<Stage> Stage {
			get {
				return this.GetList<Stage>("Stage");
			}
		}
		
		/// <summary>
		/// Status List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Status")]
		public Microsoft.SharePoint.Linq.EntityList<Status> Status {
			get {
				return this.GetList<Status>("Status");
			}
		}
		
		/// <summary>
		/// Use the style library to store style sheets, such as CSS or XSL files. The style sheets in this gallery can be used by this site or any of its subsites.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Style Library")]
		public Microsoft.SharePoint.Linq.EntityList<Dokument> StyleLibrary {
			get {
				return this.GetList<Dokument>("Style Library");
			}
		}
		
		/// <summary>
		/// Task List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Task")]
		public Microsoft.SharePoint.Linq.EntityList<Tasks> Task {
			get {
				return this.GetList<Tasks>("Task");
			}
		}
		
		/// <summary>
		/// Task Comments List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Task comments")]
		public Microsoft.SharePoint.Linq.EntityList<TaskComments> TaskComments {
			get {
				return this.GetList<TaskComments>("Task comments");
			}
		}
		
		/// <summary>
		/// Use the Tasks list to keep track of work that you or your team needs to complete.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Element> Tasks {
			get {
				return this.GetList<Element>("Tasks");
			}
		}
		
		/// <summary>
		/// Use the Team Discussion list to hold newsgroup-style discussions on topics relevant to your team.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Team Discussion")]
		public Microsoft.SharePoint.Linq.EntityList<Element> TeamDiscussion {
			get {
				return this.GetList<Element>("Team Discussion");
			}
		}
		
		/// <summary>
		/// Type List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Type")]
		public Microsoft.SharePoint.Linq.EntityList<Type> Type {
			get {
				return this.GetList<Type>("Type");
			}
		}
		
		/// <summary>
		/// Workload List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Workload")]
		public Microsoft.SharePoint.Linq.EntityList<Workload> Workload {
			get {
				return this.GetList<Workload>("Workload");
			}
		}
		
		/// <summary>
		/// All people.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="User Information List")]
		public Microsoft.SharePoint.Linq.EntityList<Element> UserInformationList {
			get {
				return this.GetList<Element>("User Information List");
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Element", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Anons))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Folder))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Wydarzenie))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Contracts))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Estimation))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Łącze))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Dokument))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Milestone))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Partners))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Priority))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ProjectResources))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Projects))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Resolution))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Resources))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Stage))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Status))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Tasks))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TaskComments))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Zadanie))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Wiadomość))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Type))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Workload))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Person))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SharePointGroup))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DomainGroup))]
	internal partial class Element : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _identyfikator;
		
		private System.Nullable<int> _wersja;
		
		private string _ścieżka;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		protected string _tytuł;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Element() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_identyfikator", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Identyfikator {
			get {
				return this._identyfikator;
			}
			set {
				if ((value != this._identyfikator)) {
					this.OnPropertyChanging("Identyfikator", this._identyfikator);
					this._identyfikator = value;
					this.OnPropertyChanged("Identyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_wersja", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Wersja {
			get {
				return this._wersja;
			}
			set {
				if ((value != this._wersja)) {
					this.OnPropertyChanging("Wersja", this._wersja);
					this._wersja = value;
					this.OnPropertyChanged("Wersja");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_ścieżka", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Ścieżka {
			get {
				return this._ścieżka;
			}
			set {
				if ((value != this._ścieżka)) {
					this.OnPropertyChanging("Ścieżka", this._ścieżka);
					this._ścieżka = value;
					this.OnPropertyChanged("Ścieżka");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_tytuł", Required=true, FieldType="Text")]
		public virtual string Tytuł {
			get {
				return this._tytuł;
			}
			set {
				if ((value != this._tytuł)) {
					this.OnPropertyChanging("Tytuł", this._tytuł);
					this._tytuł = value;
					this.OnPropertyChanged("Tytuł");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element wiadomości, stan lub inną krótką informację.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Anons", Id="0x0104")]
	internal partial class Anons : Element {
		
		private string _treść;
		
		private System.Nullable<System.DateTime> _wygasa;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Anons() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_treść", FieldType="Note")]
		public string Treść {
			get {
				return this._treść;
			}
			set {
				if ((value != this._treść)) {
					this.OnPropertyChanging("Treść", this._treść);
					this._treść = value;
					this.OnPropertyChanged("Treść");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_wygasa", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Wygasa {
			get {
				return this._wygasa;
			}
			set {
				if ((value != this._wygasa)) {
					this.OnPropertyChanging("Wygasa", this._wygasa);
					this._wygasa = value;
					this.OnPropertyChanged("Wygasa");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy folder.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Folder", Id="0x0120")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ZadanieSumaryczne))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Dyskusja))]
	internal partial class Folder : Element {
		
		private string _nazwa;
		
		private System.Nullable<int> _liczbaElementówPodrzędnychElementuIdentyfikator;
		
		private string _liczbaElementówPodrzędnychElementuItemChildCount;
		
		private System.Nullable<int> _liczbaElementówPodrzędnychFolderuIdentyfikator;
		
		private string _liczbaElementówPodrzędnychFolderuFolderChildCount;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Folder() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_nazwa", Required=true, FieldType="File")]
		public virtual string Nazwa {
			get {
				return this._nazwa;
			}
			set {
				if ((value != this._nazwa)) {
					this.OnPropertyChanging("Nazwa", this._nazwa);
					this._nazwa = value;
					this.OnPropertyChanged("Nazwa");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Folder.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Folder.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemChildCount", Storage="_liczbaElementówPodrzędnychElementuIdentyfikator", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> LiczbaElementówPodrzędnychElementuIdentyfikator {
			get {
				return this._liczbaElementówPodrzędnychElementuIdentyfikator;
			}
			set {
				if ((value != this._liczbaElementówPodrzędnychElementuIdentyfikator)) {
					this.OnPropertyChanging("LiczbaElementówPodrzędnychElementuIdentyfikator", this._liczbaElementówPodrzędnychElementuIdentyfikator);
					this._liczbaElementówPodrzędnychElementuIdentyfikator = value;
					this.OnPropertyChanged("LiczbaElementówPodrzędnychElementuIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemChildCount", Storage="_liczbaElementówPodrzędnychElementuItemChildCount", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string LiczbaElementówPodrzędnychElementuItemChildCount {
			get {
				return this._liczbaElementówPodrzędnychElementuItemChildCount;
			}
			set {
				if ((value != this._liczbaElementówPodrzędnychElementuItemChildCount)) {
					this.OnPropertyChanging("LiczbaElementówPodrzędnychElementuItemChildCount", this._liczbaElementówPodrzędnychElementuItemChildCount);
					this._liczbaElementówPodrzędnychElementuItemChildCount = value;
					this.OnPropertyChanged("LiczbaElementówPodrzędnychElementuItemChildCount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FolderChildCount", Storage="_liczbaElementówPodrzędnychFolderuIdentyfikator", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> LiczbaElementówPodrzędnychFolderuIdentyfikator {
			get {
				return this._liczbaElementówPodrzędnychFolderuIdentyfikator;
			}
			set {
				if ((value != this._liczbaElementówPodrzędnychFolderuIdentyfikator)) {
					this.OnPropertyChanging("LiczbaElementówPodrzędnychFolderuIdentyfikator", this._liczbaElementówPodrzędnychFolderuIdentyfikator);
					this._liczbaElementówPodrzędnychFolderuIdentyfikator = value;
					this.OnPropertyChanged("LiczbaElementówPodrzędnychFolderuIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FolderChildCount", Storage="_liczbaElementówPodrzędnychFolderuFolderChildCount", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string LiczbaElementówPodrzędnychFolderuFolderChildCount {
			get {
				return this._liczbaElementówPodrzędnychFolderuFolderChildCount;
			}
			set {
				if ((value != this._liczbaElementówPodrzędnychFolderuFolderChildCount)) {
					this.OnPropertyChanging("LiczbaElementówPodrzędnychFolderuFolderChildCount", this._liczbaElementówPodrzędnychFolderuFolderChildCount);
					this._liczbaElementówPodrzędnychFolderuFolderChildCount = value;
					this.OnPropertyChanged("LiczbaElementówPodrzędnychFolderuFolderChildCount");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowe spotkanie, termin ostateczny lub inne wydarzenie.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Wydarzenie", Id="0x0102")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CalendarWydarzenie))]
	internal partial class Wydarzenie : Element {
		
		private string _lokalizacja;
		
		protected System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<System.DateTime> _endTime;
		
		protected string _description;
		
		private System.Nullable<bool> _wydarzenieCałodzienne;
		
		private System.Nullable<bool> _cykl;
		
		private System.Nullable<bool> _obszarRoboczy;
		
		private System.Nullable<Kategoria> _kategoria;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Wydarzenie() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Location", Storage="_lokalizacja", FieldType="Text")]
		public string Lokalizacja {
			get {
				return this._lokalizacja;
			}
			set {
				if ((value != this._lokalizacja)) {
					this.OnPropertyChanging("Lokalizacja", this._lokalizacja);
					this._lokalizacja = value;
					this.OnPropertyChanged("Lokalizacja");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EndDate", Storage="_endTime", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> EndTime {
			get {
				return this._endTime;
			}
			set {
				if ((value != this._endTime)) {
					this.OnPropertyChanging("EndTime", this._endTime);
					this._endTime = value;
					this.OnPropertyChanged("EndTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_description", FieldType="Note")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fAllDayEvent", Storage="_wydarzenieCałodzienne", FieldType="AllDayEvent")]
		public System.Nullable<bool> WydarzenieCałodzienne {
			get {
				return this._wydarzenieCałodzienne;
			}
			set {
				if ((value != this._wydarzenieCałodzienne)) {
					this.OnPropertyChanging("WydarzenieCałodzienne", this._wydarzenieCałodzienne);
					this._wydarzenieCałodzienne = value;
					this.OnPropertyChanged("WydarzenieCałodzienne");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fRecurrence", Storage="_cykl", FieldType="Recurrence")]
		public System.Nullable<bool> Cykl {
			get {
				return this._cykl;
			}
			set {
				if ((value != this._cykl)) {
					this.OnPropertyChanging("Cykl", this._cykl);
					this._cykl = value;
					this.OnPropertyChanged("Cykl");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkspaceLink", Storage="_obszarRoboczy", FieldType="CrossProjectLink")]
		public System.Nullable<bool> ObszarRoboczy {
			get {
				return this._obszarRoboczy;
			}
			set {
				if ((value != this._obszarRoboczy)) {
					this.OnPropertyChanging("ObszarRoboczy", this._obszarRoboczy);
					this._obszarRoboczy = value;
					this.OnPropertyChanged("ObszarRoboczy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_kategoria", FieldType="Choice")]
		public System.Nullable<Kategoria> Kategoria {
			get {
				return this._kategoria;
			}
			set {
				if ((value != this._kategoria)) {
					this.OnPropertyChanging("Kategoria", this._kategoria);
					this._kategoria = value;
					this.OnPropertyChanged("Kategoria");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz łącze do strony sieci Web lub innego zasobu.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Łącze", Id="0x0105")]
	internal partial class Łącze : Element {
		
		private string _adresURL;
		
		private string _komentarze;
		
		private string _adresURL0;
		
		private string _adresURL1;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Łącze() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URL", Storage="_adresURL", Required=true, FieldType="Url")]
		public string AdresURL {
			get {
				return this._adresURL;
			}
			set {
				if ((value != this._adresURL)) {
					this.OnPropertyChanging("AdresURL", this._adresURL);
					this._adresURL = value;
					this.OnPropertyChanged("AdresURL");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_komentarze", FieldType="Note")]
		public string Komentarze {
			get {
				return this._komentarze;
			}
			set {
				if ((value != this._komentarze)) {
					this.OnPropertyChanging("Komentarze", this._komentarze);
					this._komentarze = value;
					this.OnPropertyChanged("Komentarze");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URLwMenu", Storage="_adresURL0", ReadOnly=true, FieldType="Computed")]
		public string AdresURL0 {
			get {
				return this._adresURL0;
			}
			set {
				if ((value != this._adresURL0)) {
					this.OnPropertyChanging("AdresURL0", this._adresURL0);
					this._adresURL0 = value;
					this.OnPropertyChanged("AdresURL0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URLNoMenu", Storage="_adresURL1", ReadOnly=true, FieldType="Computed")]
		public string AdresURL1 {
			get {
				return this._adresURL1;
			}
			set {
				if ((value != this._adresURL1)) {
					this.OnPropertyChanging("AdresURL1", this._adresURL1);
					this._adresURL1 = value;
					this.OnPropertyChanged("AdresURL1");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Łącze.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Łącze.");
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Dokument", Id="0x0101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(StronaWzorcowa))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(StronaTypuWiki))]
	internal partial class Dokument : Element {
		
		private string _nazwa;
		
		private string _dokumentZmodyfikowanyPrzez;
		
		private string _dokumentUtworzonyPrzez;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Dokument() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_nazwa", Required=true, FieldType="File")]
		public string Nazwa {
			get {
				return this._nazwa;
			}
			set {
				if ((value != this._nazwa)) {
					this.OnPropertyChanging("Nazwa", this._nazwa);
					this._nazwa = value;
					this.OnPropertyChanged("Nazwa");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_dokumentZmodyfikowanyPrzez", ReadOnly=true, FieldType="Text")]
		public string DokumentZmodyfikowanyPrzez {
			get {
				return this._dokumentZmodyfikowanyPrzez;
			}
			set {
				if ((value != this._dokumentZmodyfikowanyPrzez)) {
					this.OnPropertyChanging("DokumentZmodyfikowanyPrzez", this._dokumentZmodyfikowanyPrzez);
					this._dokumentZmodyfikowanyPrzez = value;
					this.OnPropertyChanged("DokumentZmodyfikowanyPrzez");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_dokumentUtworzonyPrzez", ReadOnly=true, FieldType="Text")]
		public string DokumentUtworzonyPrzez {
			get {
				return this._dokumentUtworzonyPrzez;
			}
			set {
				if ((value != this._dokumentUtworzonyPrzez)) {
					this.OnPropertyChanging("DokumentUtworzonyPrzez", this._dokumentUtworzonyPrzez);
					this._dokumentUtworzonyPrzez = value;
					this.OnPropertyChanged("DokumentUtworzonyPrzez");
				}
			}
		}
	}
	
	/// <summary>
	/// Śledź element pracy, który musi wykonać użytkownik lub jego zespół.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Zadanie", Id="0x0108")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TasksZadanie))]
	internal partial class Zadanie : Element {
		
		private System.Nullable<double> _wykonano;
		
		private string _treść;
		
		private System.Nullable<System.DateTime> _dataRozpoczęcia;
		
		protected System.Nullable<System.DateTime> _dataUkończenia;
		
		private System.Nullable<Priorytet> _priorytet;
		
		protected System.Nullable<StanZadania> _stanZadania;
		
		private Microsoft.SharePoint.Linq.EntityRef<Element> _przydzieloneDo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Zadanie() {
			this._przydzieloneDo = new Microsoft.SharePoint.Linq.EntityRef<Element>();
			this._przydzieloneDo.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Element>>(this.OnPrzydzieloneDoSync);
			this._przydzieloneDo.OnChanged += new System.EventHandler(this.OnPrzydzieloneDoChanged);
			this._przydzieloneDo.OnChanging += new System.EventHandler(this.OnPrzydzieloneDoChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentComplete", Storage="_wykonano", FieldType="Number")]
		public System.Nullable<double> Wykonano {
			get {
				return this._wykonano;
			}
			set {
				if ((value != this._wykonano)) {
					this.OnPropertyChanging("Wykonano", this._wykonano);
					this._wykonano = value;
					this.OnPropertyChanged("Wykonano");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_treść", FieldType="Note")]
		public string Treść {
			get {
				return this._treść;
			}
			set {
				if ((value != this._treść)) {
					this.OnPropertyChanging("Treść", this._treść);
					this._treść = value;
					this.OnPropertyChanged("Treść");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_dataRozpoczęcia", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DataRozpoczęcia {
			get {
				return this._dataRozpoczęcia;
			}
			set {
				if ((value != this._dataRozpoczęcia)) {
					this.OnPropertyChanging("DataRozpoczęcia", this._dataRozpoczęcia);
					this._dataRozpoczęcia = value;
					this.OnPropertyChanged("DataRozpoczęcia");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskDueDate", Storage="_dataUkończenia", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> DataUkończenia {
			get {
				return this._dataUkończenia;
			}
			set {
				if ((value != this._dataUkończenia)) {
					this.OnPropertyChanging("DataUkończenia", this._dataUkończenia);
					this._dataUkończenia = value;
					this.OnPropertyChanged("DataUkończenia");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_priorytet", FieldType="Choice")]
		public System.Nullable<Priorytet> Priorytet {
			get {
				return this._priorytet;
			}
			set {
				if ((value != this._priorytet)) {
					this.OnPropertyChanging("Priorytet", this._priorytet);
					this._priorytet = value;
					this.OnPropertyChanged("Priorytet");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskStatus", Storage="_stanZadania", FieldType="Choice")]
		public virtual System.Nullable<StanZadania> StanZadania {
			get {
				return this._stanZadania;
			}
			set {
				if ((value != this._stanZadania)) {
					this.OnPropertyChanging("StanZadania", this._stanZadania);
					this._stanZadania = value;
					this.OnPropertyChanged("StanZadania");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignedTo", Storage="_przydzieloneDo", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="User Information List")]
		public Element PrzydzieloneDo {
			get {
				return this._przydzieloneDo.GetEntity();
			}
			set {
				this._przydzieloneDo.SetEntity(value);
			}
		}
		
		private void OnPrzydzieloneDoChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PrzydzieloneDo", this._przydzieloneDo.Clone());
		}
		
		private void OnPrzydzieloneDoChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PrzydzieloneDo");
		}
		
		private void OnPrzydzieloneDoSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Element> e) {
		}
	}
	
	/// <summary>
	/// Utwórz nową wiadomość.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Wiadomość", Id="0x0107")]
	internal partial class Wiadomość : Element {
		
		private string _tematDyskusji;
		
		private string _wersja0;
		
		private string _treść;
		
		private string _odpowiedz;
		
		private string _wpis;
		
		private string _wątki;
		
		private string _ogłoszonePrzez;
		
		private string _nadawcaWiadomościEMail;
		
		private Microsoft.SharePoint.Linq.EntityRef<Element> _zmodyfikowanePrzez;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Wiadomość() {
			this._zmodyfikowanePrzez = new Microsoft.SharePoint.Linq.EntityRef<Element>();
			this._zmodyfikowanePrzez.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Element>>(this.OnZmodyfikowanePrzezSync);
			this._zmodyfikowanePrzez.OnChanged += new System.EventHandler(this.OnZmodyfikowanePrzezChanged);
			this._zmodyfikowanePrzez.OnChanging += new System.EventHandler(this.OnZmodyfikowanePrzezChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DiscussionTitle", Storage="_tematDyskusji", ReadOnly=true, FieldType="Computed")]
		public string TematDyskusji {
			get {
				return this._tematDyskusji;
			}
			set {
				if ((value != this._tematDyskusji)) {
					this.OnPropertyChanging("TematDyskusji", this._tematDyskusji);
					this._tematDyskusji = value;
					this.OnPropertyChanged("TematDyskusji");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_UIVersionString", Storage="_wersja0", ReadOnly=true, FieldType="Text")]
		public string Wersja0 {
			get {
				return this._wersja0;
			}
			set {
				if ((value != this._wersja0)) {
					this.OnPropertyChanging("Wersja0", this._wersja0);
					this._wersja0 = value;
					this.OnPropertyChanged("Wersja0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_treść", FieldType="Note")]
		public string Treść {
			get {
				return this._treść;
			}
			set {
				if ((value != this._treść)) {
					this.OnPropertyChanging("Treść", this._treść);
					this._treść = value;
					this.OnPropertyChanged("Treść");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReplyNoGif", Storage="_odpowiedz", ReadOnly=true, FieldType="Computed")]
		public string Odpowiedz {
			get {
				return this._odpowiedz;
			}
			set {
				if ((value != this._odpowiedz)) {
					this.OnPropertyChanging("Odpowiedz", this._odpowiedz);
					this._odpowiedz = value;
					this.OnPropertyChanged("Odpowiedz");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BodyAndMore", Storage="_wpis", ReadOnly=true, FieldType="Computed")]
		public string Wpis {
			get {
				return this._wpis;
			}
			set {
				if ((value != this._wpis)) {
					this.OnPropertyChanging("Wpis", this._wpis);
					this._wpis = value;
					this.OnPropertyChanged("Wpis");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Threading", Storage="_wątki", ReadOnly=true, FieldType="Computed")]
		public string Wątki {
			get {
				return this._wątki;
			}
			set {
				if ((value != this._wątki)) {
					this.OnPropertyChanging("Wątki", this._wątki);
					this._wątki = value;
					this.OnPropertyChanged("Wątki");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PersonViewMinimal", Storage="_ogłoszonePrzez", ReadOnly=true, FieldType="Computed")]
		public string OgłoszonePrzez {
			get {
				return this._ogłoszonePrzez;
			}
			set {
				if ((value != this._ogłoszonePrzez)) {
					this.OnPropertyChanging("OgłoszonePrzez", this._ogłoszonePrzez);
					this._ogłoszonePrzez = value;
					this.OnPropertyChanged("OgłoszonePrzez");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailSender", Storage="_nadawcaWiadomościEMail", FieldType="Note")]
		public string NadawcaWiadomościEMail {
			get {
				return this._nadawcaWiadomościEMail;
			}
			set {
				if ((value != this._nadawcaWiadomościEMail)) {
					this.OnPropertyChanging("NadawcaWiadomościEMail", this._nadawcaWiadomościEMail);
					this._nadawcaWiadomościEMail = value;
					this.OnPropertyChanged("NadawcaWiadomościEMail");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Wiadomość.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Wiadomość.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MyEditor", Storage="_zmodyfikowanePrzez", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="User Information List")]
		public Element ZmodyfikowanePrzez {
			get {
				return this._zmodyfikowanePrzez.GetEntity();
			}
			set {
				this._zmodyfikowanePrzez.SetEntity(value);
			}
		}
		
		private void OnZmodyfikowanePrzezChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ZmodyfikowanePrzez", this._zmodyfikowanePrzez.Clone());
		}
		
		private void OnZmodyfikowanePrzezChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ZmodyfikowanePrzez");
		}
		
		private void OnZmodyfikowanePrzezSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Element> e) {
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Person", Id="0x010A")]
	internal partial class Person : Element {
		
		private string _konto;
		
		private string _adresEMail;
		
		private string _numerTelefonuKomórkowego;
		
		private string _informacjeOAutorze;
		
		private System.Nullable<bool> _jestAdministratoremWitryny;
		
		private System.Nullable<bool> _usunięte;
		
		private string _obraz;
		
		private string _dział;
		
		private string _stanowisko;
		
		private string _adresSIP;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Person() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Name", Storage="_konto", ReadOnly=true, FieldType="Text")]
		public string Konto {
			get {
				return this._konto;
			}
			set {
				if ((value != this._konto)) {
					this.OnPropertyChanging("Konto", this._konto);
					this._konto = value;
					this.OnPropertyChanged("Konto");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EMail", Storage="_adresEMail", FieldType="Text")]
		public string AdresEMail {
			get {
				return this._adresEMail;
			}
			set {
				if ((value != this._adresEMail)) {
					this.OnPropertyChanging("AdresEMail", this._adresEMail);
					this._adresEMail = value;
					this.OnPropertyChanged("AdresEMail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MobilePhone", Storage="_numerTelefonuKomórkowego", FieldType="Text")]
		public string NumerTelefonuKomórkowego {
			get {
				return this._numerTelefonuKomórkowego;
			}
			set {
				if ((value != this._numerTelefonuKomórkowego)) {
					this.OnPropertyChanging("NumerTelefonuKomórkowego", this._numerTelefonuKomórkowego);
					this._numerTelefonuKomórkowego = value;
					this.OnPropertyChanged("NumerTelefonuKomórkowego");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Notes", Storage="_informacjeOAutorze", FieldType="Note")]
		public string InformacjeOAutorze {
			get {
				return this._informacjeOAutorze;
			}
			set {
				if ((value != this._informacjeOAutorze)) {
					this.OnPropertyChanging("InformacjeOAutorze", this._informacjeOAutorze);
					this._informacjeOAutorze = value;
					this.OnPropertyChanged("InformacjeOAutorze");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsSiteAdmin", Storage="_jestAdministratoremWitryny", ReadOnly=true, FieldType="Boolean")]
		public System.Nullable<bool> JestAdministratoremWitryny {
			get {
				return this._jestAdministratoremWitryny;
			}
			set {
				if ((value != this._jestAdministratoremWitryny)) {
					this.OnPropertyChanging("JestAdministratoremWitryny", this._jestAdministratoremWitryny);
					this._jestAdministratoremWitryny = value;
					this.OnPropertyChanged("JestAdministratoremWitryny");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Deleted", Storage="_usunięte", ReadOnly=true, FieldType="Boolean")]
		public System.Nullable<bool> Usunięte {
			get {
				return this._usunięte;
			}
			set {
				if ((value != this._usunięte)) {
					this.OnPropertyChanging("Usunięte", this._usunięte);
					this._usunięte = value;
					this.OnPropertyChanged("Usunięte");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Picture", Storage="_obraz", FieldType="Url")]
		public string Obraz {
			get {
				return this._obraz;
			}
			set {
				if ((value != this._obraz)) {
					this.OnPropertyChanging("Obraz", this._obraz);
					this._obraz = value;
					this.OnPropertyChanged("Obraz");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Department", Storage="_dział", FieldType="Text")]
		public string Dział {
			get {
				return this._dział;
			}
			set {
				if ((value != this._dział)) {
					this.OnPropertyChanging("Dział", this._dział);
					this._dział = value;
					this.OnPropertyChanged("Dział");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="JobTitle", Storage="_stanowisko", FieldType="Text")]
		public string Stanowisko {
			get {
				return this._stanowisko;
			}
			set {
				if ((value != this._stanowisko)) {
					this.OnPropertyChanging("Stanowisko", this._stanowisko);
					this._stanowisko = value;
					this.OnPropertyChanged("Stanowisko");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SipAddress", Storage="_adresSIP", FieldType="Text")]
		public string AdresSIP {
			get {
				return this._adresSIP;
			}
			set {
				if ((value != this._adresSIP)) {
					this.OnPropertyChanging("AdresSIP", this._adresSIP);
					this._adresSIP = value;
					this.OnPropertyChanged("AdresSIP");
				}
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SharePointGroup", Id="0x010B")]
	internal partial class SharePointGroup : Element {
		
		private string _konto;
		
		private string _adresEMail;
		
		private string _informacjeOAutorze;
		
		private string _obraz;
		
		private string _adresSIP;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SharePointGroup() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Name", Storage="_konto", ReadOnly=true, FieldType="Text")]
		public string Konto {
			get {
				return this._konto;
			}
			set {
				if ((value != this._konto)) {
					this.OnPropertyChanging("Konto", this._konto);
					this._konto = value;
					this.OnPropertyChanged("Konto");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EMail", Storage="_adresEMail", FieldType="Text")]
		public string AdresEMail {
			get {
				return this._adresEMail;
			}
			set {
				if ((value != this._adresEMail)) {
					this.OnPropertyChanging("AdresEMail", this._adresEMail);
					this._adresEMail = value;
					this.OnPropertyChanged("AdresEMail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Notes", Storage="_informacjeOAutorze", FieldType="Note")]
		public string InformacjeOAutorze {
			get {
				return this._informacjeOAutorze;
			}
			set {
				if ((value != this._informacjeOAutorze)) {
					this.OnPropertyChanging("InformacjeOAutorze", this._informacjeOAutorze);
					this._informacjeOAutorze = value;
					this.OnPropertyChanged("InformacjeOAutorze");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Picture", Storage="_obraz", FieldType="Url")]
		public string Obraz {
			get {
				return this._obraz;
			}
			set {
				if ((value != this._obraz)) {
					this.OnPropertyChanging("Obraz", this._obraz);
					this._obraz = value;
					this.OnPropertyChanged("Obraz");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SipAddress", Storage="_adresSIP", FieldType="Text")]
		public string AdresSIP {
			get {
				return this._adresSIP;
			}
			set {
				if ((value != this._adresSIP)) {
					this.OnPropertyChanging("AdresSIP", this._adresSIP);
					this._adresSIP = value;
					this.OnPropertyChanged("AdresSIP");
				}
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="DomainGroup", Id="0x010C")]
	internal partial class DomainGroup : Element {
		
		private string _konto;
		
		private string _adresEMail;
		
		private string _informacjeOAutorze;
		
		private System.Nullable<bool> _jestAdministratoremWitryny;
		
		private System.Nullable<bool> _usunięte;
		
		private string _obraz;
		
		private string _adresSIP;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DomainGroup() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Name", Storage="_konto", ReadOnly=true, FieldType="Text")]
		public string Konto {
			get {
				return this._konto;
			}
			set {
				if ((value != this._konto)) {
					this.OnPropertyChanging("Konto", this._konto);
					this._konto = value;
					this.OnPropertyChanged("Konto");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EMail", Storage="_adresEMail", FieldType="Text")]
		public string AdresEMail {
			get {
				return this._adresEMail;
			}
			set {
				if ((value != this._adresEMail)) {
					this.OnPropertyChanging("AdresEMail", this._adresEMail);
					this._adresEMail = value;
					this.OnPropertyChanged("AdresEMail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Notes", Storage="_informacjeOAutorze", FieldType="Note")]
		public string InformacjeOAutorze {
			get {
				return this._informacjeOAutorze;
			}
			set {
				if ((value != this._informacjeOAutorze)) {
					this.OnPropertyChanging("InformacjeOAutorze", this._informacjeOAutorze);
					this._informacjeOAutorze = value;
					this.OnPropertyChanged("InformacjeOAutorze");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsSiteAdmin", Storage="_jestAdministratoremWitryny", ReadOnly=true, FieldType="Boolean")]
		public System.Nullable<bool> JestAdministratoremWitryny {
			get {
				return this._jestAdministratoremWitryny;
			}
			set {
				if ((value != this._jestAdministratoremWitryny)) {
					this.OnPropertyChanging("JestAdministratoremWitryny", this._jestAdministratoremWitryny);
					this._jestAdministratoremWitryny = value;
					this.OnPropertyChanged("JestAdministratoremWitryny");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Deleted", Storage="_usunięte", ReadOnly=true, FieldType="Boolean")]
		public System.Nullable<bool> Usunięte {
			get {
				return this._usunięte;
			}
			set {
				if ((value != this._usunięte)) {
					this.OnPropertyChanging("Usunięte", this._usunięte);
					this._usunięte = value;
					this.OnPropertyChanged("Usunięte");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Picture", Storage="_obraz", FieldType="Url")]
		public string Obraz {
			get {
				return this._obraz;
			}
			set {
				if ((value != this._obraz)) {
					this.OnPropertyChanging("Obraz", this._obraz);
					this._obraz = value;
					this.OnPropertyChanged("Obraz");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SipAddress", Storage="_adresSIP", FieldType="Text")]
		public string AdresSIP {
			get {
				return this._adresSIP;
			}
			set {
				if ((value != this._adresSIP)) {
					this.OnPropertyChanging("AdresSIP", this._adresSIP);
					this._adresSIP = value;
					this.OnPropertyChanged("AdresSIP");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nową stronę wzorcową.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Strona wzorcowa", Id="0x010105")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(MasterPageGalleryStronaWzorcowa))]
	internal partial class StronaWzorcowa : Dokument {
		
		protected string _description;
		
		private System.Nullable<UIVersion> _uIVersion;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public StronaWzorcowa() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_description", FieldType="Note")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UIVersion", Storage="_uIVersion", FieldType="MultiChoice")]
		public System.Nullable<UIVersion> UIVersion {
			get {
				return this._uIVersion;
			}
			set {
				if ((value != this._uIVersion)) {
					this.OnPropertyChanging("UIVersion", this._uIVersion);
					this._uIVersion = value;
					this.OnPropertyChanged("UIVersion");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nową stronę typu wiki.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Strona typu wiki", Id="0x010108")]
	internal partial class StronaTypuWiki : Dokument {
		
		private string _zawartośćTypuWiki;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public StronaTypuWiki() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WikiField", Storage="_zawartośćTypuWiki", FieldType="Note")]
		public string ZawartośćTypuWiki {
			get {
				return this._zawartośćTypuWiki;
			}
			set {
				if ((value != this._zawartośćTypuWiki)) {
					this.OnPropertyChanging("ZawartośćTypuWiki", this._zawartośćTypuWiki);
					this._zawartośćTypuWiki = value;
					this.OnPropertyChanged("ZawartośćTypuWiki");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Strona typu wiki.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Strona typu wiki.");
			}
		}
	}
	
	/// <summary>
	/// Grupuj i opisuj zadania pokrewne, które masz wykonać lub które ma wykonać zespół.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Zadanie sumaryczne", Id="0x012004")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TasksZadanieSumaryczne))]
	internal partial class ZadanieSumaryczne : Folder {
		
		private System.Nullable<double> _wykonano;
		
		private string _treść;
		
		private System.Nullable<System.DateTime> _dataRozpoczęcia;
		
		protected System.Nullable<System.DateTime> _dataUkończenia;
		
		private System.Nullable<Priorytet> _priorytet;
		
		protected System.Nullable<StanZadania> _stanZadania;
		
		private Microsoft.SharePoint.Linq.EntityRef<Element> _przydzieloneDo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ZadanieSumaryczne() {
			this._przydzieloneDo = new Microsoft.SharePoint.Linq.EntityRef<Element>();
			this._przydzieloneDo.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Element>>(this.OnPrzydzieloneDoSync);
			this._przydzieloneDo.OnChanged += new System.EventHandler(this.OnPrzydzieloneDoChanged);
			this._przydzieloneDo.OnChanging += new System.EventHandler(this.OnPrzydzieloneDoChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentComplete", Storage="_wykonano", FieldType="Number")]
		public System.Nullable<double> Wykonano {
			get {
				return this._wykonano;
			}
			set {
				if ((value != this._wykonano)) {
					this.OnPropertyChanging("Wykonano", this._wykonano);
					this._wykonano = value;
					this.OnPropertyChanged("Wykonano");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_treść", FieldType="Note")]
		public string Treść {
			get {
				return this._treść;
			}
			set {
				if ((value != this._treść)) {
					this.OnPropertyChanging("Treść", this._treść);
					this._treść = value;
					this.OnPropertyChanged("Treść");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_dataRozpoczęcia", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DataRozpoczęcia {
			get {
				return this._dataRozpoczęcia;
			}
			set {
				if ((value != this._dataRozpoczęcia)) {
					this.OnPropertyChanging("DataRozpoczęcia", this._dataRozpoczęcia);
					this._dataRozpoczęcia = value;
					this.OnPropertyChanged("DataRozpoczęcia");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskDueDate", Storage="_dataUkończenia", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> DataUkończenia {
			get {
				return this._dataUkończenia;
			}
			set {
				if ((value != this._dataUkończenia)) {
					this.OnPropertyChanging("DataUkończenia", this._dataUkończenia);
					this._dataUkończenia = value;
					this.OnPropertyChanged("DataUkończenia");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_priorytet", FieldType="Choice")]
		public System.Nullable<Priorytet> Priorytet {
			get {
				return this._priorytet;
			}
			set {
				if ((value != this._priorytet)) {
					this.OnPropertyChanging("Priorytet", this._priorytet);
					this._priorytet = value;
					this.OnPropertyChanged("Priorytet");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskStatus", Storage="_stanZadania", FieldType="Choice")]
		public virtual System.Nullable<StanZadania> StanZadania {
			get {
				return this._stanZadania;
			}
			set {
				if ((value != this._stanZadania)) {
					this.OnPropertyChanging("StanZadania", this._stanZadania);
					this._stanZadania = value;
					this.OnPropertyChanged("StanZadania");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignedTo", Storage="_przydzieloneDo", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="User Information List")]
		public Element PrzydzieloneDo {
			get {
				return this._przydzieloneDo.GetEntity();
			}
			set {
				this._przydzieloneDo.SetEntity(value);
			}
		}
		
		private void OnPrzydzieloneDoChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PrzydzieloneDo", this._przydzieloneDo.Clone());
		}
		
		private void OnPrzydzieloneDoChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PrzydzieloneDo");
		}
		
		private void OnPrzydzieloneDoSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Element> e) {
		}
	}
	
	/// <summary>
	/// Utwórz nowy temat dyskusji.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Dyskusja", Id="0x012002")]
	internal partial class Dyskusja : Folder {
		
		private string _tematDyskusji;
		
		private string _wersja0;
		
		private string _treść;
		
		private string _odpowiedz;
		
		private string _wpis;
		
		private string _wątki;
		
		private string _ogłoszonePrzez;
		
		private System.Nullable<System.DateTime> _lastUpdated;
		
		private string _nadawcaWiadomościEMail;
		
		private Microsoft.SharePoint.Linq.EntityRef<Element> _zmodyfikowanePrzez;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Dyskusja() {
			this._zmodyfikowanePrzez = new Microsoft.SharePoint.Linq.EntityRef<Element>();
			this._zmodyfikowanePrzez.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Element>>(this.OnZmodyfikowanePrzezSync);
			this._zmodyfikowanePrzez.OnChanged += new System.EventHandler(this.OnZmodyfikowanePrzezChanged);
			this._zmodyfikowanePrzez.OnChanging += new System.EventHandler(this.OnZmodyfikowanePrzezChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_tytuł", Required=true, FieldType="Text")]
		public override string Tytuł {
			get {
				return this._tytuł;
			}
			set {
				if ((value != this._tytuł)) {
					this.OnPropertyChanging("Tytuł", this._tytuł);
					this._tytuł = value;
					this.OnPropertyChanged("Tytuł");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DiscussionTitle", Storage="_tematDyskusji", ReadOnly=true, FieldType="Computed")]
		public string TematDyskusji {
			get {
				return this._tematDyskusji;
			}
			set {
				if ((value != this._tematDyskusji)) {
					this.OnPropertyChanging("TematDyskusji", this._tematDyskusji);
					this._tematDyskusji = value;
					this.OnPropertyChanged("TematDyskusji");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_UIVersionString", Storage="_wersja0", ReadOnly=true, FieldType="Text")]
		public string Wersja0 {
			get {
				return this._wersja0;
			}
			set {
				if ((value != this._wersja0)) {
					this.OnPropertyChanging("Wersja0", this._wersja0);
					this._wersja0 = value;
					this.OnPropertyChanged("Wersja0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_treść", FieldType="Note")]
		public string Treść {
			get {
				return this._treść;
			}
			set {
				if ((value != this._treść)) {
					this.OnPropertyChanging("Treść", this._treść);
					this._treść = value;
					this.OnPropertyChanged("Treść");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReplyNoGif", Storage="_odpowiedz", ReadOnly=true, FieldType="Computed")]
		public string Odpowiedz {
			get {
				return this._odpowiedz;
			}
			set {
				if ((value != this._odpowiedz)) {
					this.OnPropertyChanging("Odpowiedz", this._odpowiedz);
					this._odpowiedz = value;
					this.OnPropertyChanged("Odpowiedz");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BodyAndMore", Storage="_wpis", ReadOnly=true, FieldType="Computed")]
		public string Wpis {
			get {
				return this._wpis;
			}
			set {
				if ((value != this._wpis)) {
					this.OnPropertyChanging("Wpis", this._wpis);
					this._wpis = value;
					this.OnPropertyChanged("Wpis");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Threading", Storage="_wątki", ReadOnly=true, FieldType="Computed")]
		public string Wątki {
			get {
				return this._wątki;
			}
			set {
				if ((value != this._wątki)) {
					this.OnPropertyChanging("Wątki", this._wątki);
					this._wątki = value;
					this.OnPropertyChanged("Wątki");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PersonViewMinimal", Storage="_ogłoszonePrzez", ReadOnly=true, FieldType="Computed")]
		public string OgłoszonePrzez {
			get {
				return this._ogłoszonePrzez;
			}
			set {
				if ((value != this._ogłoszonePrzez)) {
					this.OnPropertyChanging("OgłoszonePrzez", this._ogłoszonePrzez);
					this._ogłoszonePrzez = value;
					this.OnPropertyChanged("OgłoszonePrzez");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DiscussionLastUpdated", Storage="_lastUpdated", ReadOnly=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated {
			get {
				return this._lastUpdated;
			}
			set {
				if ((value != this._lastUpdated)) {
					this.OnPropertyChanging("LastUpdated", this._lastUpdated);
					this._lastUpdated = value;
					this.OnPropertyChanged("LastUpdated");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailSender", Storage="_nadawcaWiadomościEMail", FieldType="Note")]
		public string NadawcaWiadomościEMail {
			get {
				return this._nadawcaWiadomościEMail;
			}
			set {
				if ((value != this._nadawcaWiadomościEMail)) {
					this.OnPropertyChanging("NadawcaWiadomościEMail", this._nadawcaWiadomościEMail);
					this._nadawcaWiadomościEMail = value;
					this.OnPropertyChanged("NadawcaWiadomościEMail");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Nazwa {
			get {
				throw new System.InvalidOperationException("Pole FileLeafRef zostało usunięte z typu zawartości Dyskusja.");
			}
			set {
				throw new System.InvalidOperationException("Pole FileLeafRef zostało usunięte z typu zawartości Dyskusja.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MyEditor", Storage="_zmodyfikowanePrzez", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="User Information List")]
		public Element ZmodyfikowanePrzez {
			get {
				return this._zmodyfikowanePrzez.GetEntity();
			}
			set {
				this._zmodyfikowanePrzez.SetEntity(value);
			}
		}
		
		private void OnZmodyfikowanePrzezChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ZmodyfikowanePrzez", this._zmodyfikowanePrzez.Clone());
		}
		
		private void OnZmodyfikowanePrzezChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ZmodyfikowanePrzez");
		}
		
		private void OnZmodyfikowanePrzezSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Element> e) {
		}
	}
	
	/// <summary>
	/// Contracts Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Contracts", Id="0x0100DABE2F02363F46BCB5699B2E6DDA8A82")]
	internal partial class Contracts : Element {
		
		private string _contractNumber;
		
		private string _contractSubject;
		
		private System.Nullable<System.DateTime> _contractDate;
		
		private System.Nullable<System.DateTime> _contractEndDate;
		
		private System.Nullable<System.DateTime> _contractWarrantyDate;
		
		private string _contractOffer;
		
		private System.Nullable<double> _contractValue;
		
		private string _body;
		
		private System.Nullable<Currency> _currency;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partners> _contracts2PartnersTitle;
		
		private Microsoft.SharePoint.Linq.EntitySet<Projects> _projects;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Contracts() {
			this._contracts2PartnersTitle = new Microsoft.SharePoint.Linq.EntityRef<Partners>();
			this._contracts2PartnersTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partners>>(this.OnContracts2PartnersTitleSync);
			this._contracts2PartnersTitle.OnChanged += new System.EventHandler(this.OnContracts2PartnersTitleChanged);
			this._contracts2PartnersTitle.OnChanging += new System.EventHandler(this.OnContracts2PartnersTitleChanging);
			this._projects = new Microsoft.SharePoint.Linq.EntitySet<Projects>();
			this._projects.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Projects>>(this.OnProjectsSync);
			this._projects.OnChanged += new System.EventHandler(this.OnProjectsChanged);
			this._projects.OnChanging += new System.EventHandler(this.OnProjectsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContractNumber", Storage="_contractNumber", FieldType="Text")]
		public string ContractNumber {
			get {
				return this._contractNumber;
			}
			set {
				if ((value != this._contractNumber)) {
					this.OnPropertyChanging("ContractNumber", this._contractNumber);
					this._contractNumber = value;
					this.OnPropertyChanged("ContractNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContractSubject", Storage="_contractSubject", FieldType="Text")]
		public string ContractSubject {
			get {
				return this._contractSubject;
			}
			set {
				if ((value != this._contractSubject)) {
					this.OnPropertyChanging("ContractSubject", this._contractSubject);
					this._contractSubject = value;
					this.OnPropertyChanged("ContractSubject");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContractDate", Storage="_contractDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ContractDate {
			get {
				return this._contractDate;
			}
			set {
				if ((value != this._contractDate)) {
					this.OnPropertyChanging("ContractDate", this._contractDate);
					this._contractDate = value;
					this.OnPropertyChanged("ContractDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContractEndDate", Storage="_contractEndDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ContractEndDate {
			get {
				return this._contractEndDate;
			}
			set {
				if ((value != this._contractEndDate)) {
					this.OnPropertyChanging("ContractEndDate", this._contractEndDate);
					this._contractEndDate = value;
					this.OnPropertyChanged("ContractEndDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContractWarrantyDate", Storage="_contractWarrantyDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ContractWarrantyDate {
			get {
				return this._contractWarrantyDate;
			}
			set {
				if ((value != this._contractWarrantyDate)) {
					this.OnPropertyChanging("ContractWarrantyDate", this._contractWarrantyDate);
					this._contractWarrantyDate = value;
					this.OnPropertyChanged("ContractWarrantyDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContractOffer", Storage="_contractOffer", FieldType="Text")]
		public string ContractOffer {
			get {
				return this._contractOffer;
			}
			set {
				if ((value != this._contractOffer)) {
					this.OnPropertyChanging("ContractOffer", this._contractOffer);
					this._contractOffer = value;
					this.OnPropertyChanged("ContractOffer");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContractValue", Storage="_contractValue", FieldType="Number")]
		public System.Nullable<double> ContractValue {
			get {
				return this._contractValue;
			}
			set {
				if ((value != this._contractValue)) {
					this.OnPropertyChanging("ContractValue", this._contractValue);
					this._contractValue = value;
					this.OnPropertyChanged("ContractValue");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Currency", Storage="_currency", FieldType="Choice")]
		public System.Nullable<Currency> Currency {
			get {
				return this._currency;
			}
			set {
				if ((value != this._currency)) {
					this.OnPropertyChanging("Currency", this._currency);
					this._currency = value;
					this.OnPropertyChanged("Currency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Contracts2PartnersTitle", Storage="_contracts2PartnersTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partners")]
		public Partners Contracts2PartnersTitle {
			get {
				return this._contracts2PartnersTitle.GetEntity();
			}
			set {
				this._contracts2PartnersTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Project2ContractTitle", Storage="_projects", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Projects")]
		public Microsoft.SharePoint.Linq.EntitySet<Projects> Projects {
			get {
				return this._projects;
			}
			set {
				this._projects.Assign(value);
			}
		}
		
		private void OnContracts2PartnersTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Contracts2PartnersTitle", this._contracts2PartnersTitle.Clone());
		}
		
		private void OnContracts2PartnersTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Contracts2PartnersTitle");
		}
		
		private void OnContracts2PartnersTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partners> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Contracts.Add(this);
			}
			else {
				e.Item.Contracts.Remove(this);
			}
		}
		
		private void OnProjectsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Projects", this._projects.Clone());
		}
		
		private void OnProjectsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Projects");
		}
		
		private void OnProjectsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Projects> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Project2ContractTitle = this;
			}
			else {
				e.Item.Project2ContractTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Estimation Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Estimation", Id="0x01001AF97106D9F1498B82C9980861B39EA1")]
	internal partial class Estimation : Element {
		
		private System.Nullable<double> _estimatedWorkload;
		
		private Microsoft.SharePoint.Linq.EntityRef<Resources> _estimation2ResourcesTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Projects> _estimation2ProjectTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Estimation() {
			this._estimation2ResourcesTitle = new Microsoft.SharePoint.Linq.EntityRef<Resources>();
			this._estimation2ResourcesTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Resources>>(this.OnEstimation2ResourcesTitleSync);
			this._estimation2ResourcesTitle.OnChanged += new System.EventHandler(this.OnEstimation2ResourcesTitleChanged);
			this._estimation2ResourcesTitle.OnChanging += new System.EventHandler(this.OnEstimation2ResourcesTitleChanging);
			this._estimation2ProjectTitle = new Microsoft.SharePoint.Linq.EntityRef<Projects>();
			this._estimation2ProjectTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Projects>>(this.OnEstimation2ProjectTitleSync);
			this._estimation2ProjectTitle.OnChanged += new System.EventHandler(this.OnEstimation2ProjectTitleChanged);
			this._estimation2ProjectTitle.OnChanging += new System.EventHandler(this.OnEstimation2ProjectTitleChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EstimatedWorkload", Storage="_estimatedWorkload", FieldType="Number")]
		public System.Nullable<double> EstimatedWorkload {
			get {
				return this._estimatedWorkload;
			}
			set {
				if ((value != this._estimatedWorkload)) {
					this.OnPropertyChanging("EstimatedWorkload", this._estimatedWorkload);
					this._estimatedWorkload = value;
					this.OnPropertyChanged("EstimatedWorkload");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Estimation.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Estimation.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Estimation2ResourcesTitle", Storage="_estimation2ResourcesTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Resources")]
		public Resources Estimation2ResourcesTitle {
			get {
				return this._estimation2ResourcesTitle.GetEntity();
			}
			set {
				this._estimation2ResourcesTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Estimation2ProjectTitle", Storage="_estimation2ProjectTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Projects")]
		public Projects Estimation2ProjectTitle {
			get {
				return this._estimation2ProjectTitle.GetEntity();
			}
			set {
				this._estimation2ProjectTitle.SetEntity(value);
			}
		}
		
		private void OnEstimation2ResourcesTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Estimation2ResourcesTitle", this._estimation2ResourcesTitle.Clone());
		}
		
		private void OnEstimation2ResourcesTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Estimation2ResourcesTitle");
		}
		
		private void OnEstimation2ResourcesTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Resources> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Estimation.Add(this);
			}
			else {
				e.Item.Estimation.Remove(this);
			}
		}
		
		private void OnEstimation2ProjectTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Estimation2ProjectTitle", this._estimation2ProjectTitle.Clone());
		}
		
		private void OnEstimation2ProjectTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Estimation2ProjectTitle");
		}
		
		private void OnEstimation2ProjectTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Projects> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Estimation.Add(this);
			}
			else {
				e.Item.Estimation.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Milestone Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Milestone", Id="0x0100EB00A9F1B21F48A699409A797C893B5A")]
	internal partial class Milestone : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<Stage> _milestone2StageTitle;
		
		private Microsoft.SharePoint.Linq.EntitySet<Tasks> _tasks;
		
		private Microsoft.SharePoint.Linq.EntitySet<Tasks> _tasks0;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Milestone() {
			this._milestone2StageTitle = new Microsoft.SharePoint.Linq.EntityRef<Stage>();
			this._milestone2StageTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Stage>>(this.OnMilestone2StageTitleSync);
			this._milestone2StageTitle.OnChanged += new System.EventHandler(this.OnMilestone2StageTitleChanged);
			this._milestone2StageTitle.OnChanging += new System.EventHandler(this.OnMilestone2StageTitleChanging);
			this._tasks = new Microsoft.SharePoint.Linq.EntitySet<Tasks>();
			this._tasks.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks>>(this.OnTasksSync);
			this._tasks.OnChanged += new System.EventHandler(this.OnTasksChanged);
			this._tasks.OnChanging += new System.EventHandler(this.OnTasksChanging);
			this._tasks0 = new Microsoft.SharePoint.Linq.EntitySet<Tasks>();
			this._tasks0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks>>(this.OnTasks0Sync);
			this._tasks0.OnChanged += new System.EventHandler(this.OnTasks0Changed);
			this._tasks0.OnChanging += new System.EventHandler(this.OnTasks0Changing);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Milestone2StageTitle", Storage="_milestone2StageTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Stage")]
		public Stage Milestone2StageTitle {
			get {
				return this._milestone2StageTitle.GetEntity();
			}
			set {
				this._milestone2StageTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2MilestoneDefinedInTitle", Storage="_tasks", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Task")]
		public Microsoft.SharePoint.Linq.EntitySet<Tasks> Tasks {
			get {
				return this._tasks;
			}
			set {
				this._tasks.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2MilestoneResolvedInTitle", Storage="_tasks0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Task")]
		public Microsoft.SharePoint.Linq.EntitySet<Tasks> Tasks0 {
			get {
				return this._tasks0;
			}
			set {
				this._tasks0.Assign(value);
			}
		}
		
		private void OnMilestone2StageTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Milestone2StageTitle", this._milestone2StageTitle.Clone());
		}
		
		private void OnMilestone2StageTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Milestone2StageTitle");
		}
		
		private void OnMilestone2StageTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Stage> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Milestone.Add(this);
			}
			else {
				e.Item.Milestone.Remove(this);
			}
		}
		
		private void OnTasksChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Tasks", this._tasks.Clone());
		}
		
		private void OnTasksChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Tasks");
		}
		
		private void OnTasksSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Task2MilestoneDefinedInTitle = this;
			}
			else {
				e.Item.Task2MilestoneDefinedInTitle = null;
			}
		}
		
		private void OnTasks0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Tasks0", this._tasks0.Clone());
		}
		
		private void OnTasks0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Tasks0");
		}
		
		private void OnTasks0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Task2MilestoneResolvedInTitle = this;
			}
			else {
				e.Item.Task2MilestoneResolvedInTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Partners Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Partners", Id="0x0100E64D1186D14D472EB1984F194359BB20")]
	internal partial class Partners : Element {
		
		private string _workCountry;
		
		private string _workCity;
		
		private string _workZip;
		
		private string _workAddress;
		
		private string _workPhone;
		
		private string _workFax;
		
		private string _cellPhone;
		
		private string _eMail;
		
		private string _body;
		
		private Microsoft.SharePoint.Linq.EntitySet<Contracts> _contracts;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Partners() {
			this._contracts = new Microsoft.SharePoint.Linq.EntitySet<Contracts>();
			this._contracts.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Contracts>>(this.OnContractsSync);
			this._contracts.OnChanged += new System.EventHandler(this.OnContractsChanged);
			this._contracts.OnChanging += new System.EventHandler(this.OnContractsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCountry", Storage="_workCountry", FieldType="Text")]
		public string WorkCountry {
			get {
				return this._workCountry;
			}
			set {
				if ((value != this._workCountry)) {
					this.OnPropertyChanging("WorkCountry", this._workCountry);
					this._workCountry = value;
					this.OnPropertyChanged("WorkCountry");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCity", Storage="_workCity", FieldType="Text")]
		public string WorkCity {
			get {
				return this._workCity;
			}
			set {
				if ((value != this._workCity)) {
					this.OnPropertyChanging("WorkCity", this._workCity);
					this._workCity = value;
					this.OnPropertyChanged("WorkCity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkZip", Storage="_workZip", FieldType="Text")]
		public string WorkZip {
			get {
				return this._workZip;
			}
			set {
				if ((value != this._workZip)) {
					this.OnPropertyChanging("WorkZip", this._workZip);
					this._workZip = value;
					this.OnPropertyChanged("WorkZip");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkAddress", Storage="_workAddress", FieldType="Note")]
		public string WorkAddress {
			get {
				return this._workAddress;
			}
			set {
				if ((value != this._workAddress)) {
					this.OnPropertyChanging("WorkAddress", this._workAddress);
					this._workAddress = value;
					this.OnPropertyChanged("WorkAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkPhone", Storage="_workPhone", FieldType="Text")]
		public string WorkPhone {
			get {
				return this._workPhone;
			}
			set {
				if ((value != this._workPhone)) {
					this.OnPropertyChanging("WorkPhone", this._workPhone);
					this._workPhone = value;
					this.OnPropertyChanged("WorkPhone");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkFax", Storage="_workFax", FieldType="Text")]
		public string WorkFax {
			get {
				return this._workFax;
			}
			set {
				if ((value != this._workFax)) {
					this.OnPropertyChanging("WorkFax", this._workFax);
					this._workFax = value;
					this.OnPropertyChanged("WorkFax");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CellPhone", Storage="_cellPhone", FieldType="Text")]
		public string CellPhone {
			get {
				return this._cellPhone;
			}
			set {
				if ((value != this._cellPhone)) {
					this.OnPropertyChanging("CellPhone", this._cellPhone);
					this._cellPhone = value;
					this.OnPropertyChanged("CellPhone");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EMail", Storage="_eMail", FieldType="Text")]
		public string EMail {
			get {
				return this._eMail;
			}
			set {
				if ((value != this._eMail)) {
					this.OnPropertyChanging("EMail", this._eMail);
					this._eMail = value;
					this.OnPropertyChanged("EMail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Contracts2PartnersTitle", Storage="_contracts", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Contracts")]
		public Microsoft.SharePoint.Linq.EntitySet<Contracts> Contracts {
			get {
				return this._contracts;
			}
			set {
				this._contracts.Assign(value);
			}
		}
		
		private void OnContractsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Contracts", this._contracts.Clone());
		}
		
		private void OnContractsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Contracts");
		}
		
		private void OnContractsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Contracts> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Contracts2PartnersTitle = this;
			}
			else {
				e.Item.Contracts2PartnersTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Priority Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Priority", Id="0x01008A82AC63B9A949DA95DAA3E970754393")]
	internal partial class Priority : Element {
		
		private Microsoft.SharePoint.Linq.EntitySet<Tasks> _tasks;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Priority() {
			this._tasks = new Microsoft.SharePoint.Linq.EntitySet<Tasks>();
			this._tasks.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks>>(this.OnTasksSync);
			this._tasks.OnChanged += new System.EventHandler(this.OnTasksChanged);
			this._tasks.OnChanging += new System.EventHandler(this.OnTasksChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2SPriorityTitle", Storage="_tasks", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Task")]
		public Microsoft.SharePoint.Linq.EntitySet<Tasks> Tasks {
			get {
				return this._tasks;
			}
			set {
				this._tasks.Assign(value);
			}
		}
		
		private void OnTasksChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Tasks", this._tasks.Clone());
		}
		
		private void OnTasksChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Tasks");
		}
		
		private void OnTasksSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Task2SPriorityTitle = this;
			}
			else {
				e.Item.Task2SPriorityTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Project Resources Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ProjectResources", Id="0x010024CBE050404F4A828D35E2F33E991219")]
	internal partial class ProjectResources : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<Projects> _projectResources2ProjectTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Resources> _projectResources2ResourcesTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ProjectResources() {
			this._projectResources2ProjectTitle = new Microsoft.SharePoint.Linq.EntityRef<Projects>();
			this._projectResources2ProjectTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Projects>>(this.OnProjectResources2ProjectTitleSync);
			this._projectResources2ProjectTitle.OnChanged += new System.EventHandler(this.OnProjectResources2ProjectTitleChanged);
			this._projectResources2ProjectTitle.OnChanging += new System.EventHandler(this.OnProjectResources2ProjectTitleChanging);
			this._projectResources2ResourcesTitle = new Microsoft.SharePoint.Linq.EntityRef<Resources>();
			this._projectResources2ResourcesTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Resources>>(this.OnProjectResources2ResourcesTitleSync);
			this._projectResources2ResourcesTitle.OnChanged += new System.EventHandler(this.OnProjectResources2ResourcesTitleChanged);
			this._projectResources2ResourcesTitle.OnChanging += new System.EventHandler(this.OnProjectResources2ResourcesTitleChanging);
			this.OnCreated();
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości ProjectResources.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości ProjectResources.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ProjectResources2ProjectTitle", Storage="_projectResources2ProjectTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Projects")]
		public Projects ProjectResources2ProjectTitle {
			get {
				return this._projectResources2ProjectTitle.GetEntity();
			}
			set {
				this._projectResources2ProjectTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ProjectResources2ResourcesTitle", Storage="_projectResources2ResourcesTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Resources")]
		public Resources ProjectResources2ResourcesTitle {
			get {
				return this._projectResources2ResourcesTitle.GetEntity();
			}
			set {
				this._projectResources2ResourcesTitle.SetEntity(value);
			}
		}
		
		private void OnProjectResources2ProjectTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ProjectResources2ProjectTitle", this._projectResources2ProjectTitle.Clone());
		}
		
		private void OnProjectResources2ProjectTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ProjectResources2ProjectTitle");
		}
		
		private void OnProjectResources2ProjectTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Projects> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ProjectResources.Add(this);
			}
			else {
				e.Item.ProjectResources.Remove(this);
			}
		}
		
		private void OnProjectResources2ResourcesTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ProjectResources2ResourcesTitle", this._projectResources2ResourcesTitle.Clone());
		}
		
		private void OnProjectResources2ResourcesTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ProjectResources2ResourcesTitle");
		}
		
		private void OnProjectResources2ResourcesTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Resources> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ProjectResources.Add(this);
			}
			else {
				e.Item.ProjectResources.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Projects Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Projects", Id="0x01000C2CCABBA2E1473BA2623EFDA04E749E")]
	internal partial class Projects : Element {
		
		private string _projectNumber;
		
		private System.Nullable<double> _projectHours;
		
		private System.Nullable<System.DateTime> _projectStartDate;
		
		private System.Nullable<System.DateTime> _projectEndDate;
		
		private System.Nullable<System.DateTime> _projectWarrantyDate;
		
		private System.Nullable<double> _projectBudget;
		
		private string _body;
		
		private System.Nullable<ProjectType> _projectType;
		
		private System.Nullable<ProjectYear> _projectYear;
		
		private System.Nullable<Currency> _currency;
		
		private Microsoft.SharePoint.Linq.EntitySet<Estimation> _estimation;
		
		private Microsoft.SharePoint.Linq.EntitySet<ProjectResources> _projectResources;
		
		private Microsoft.SharePoint.Linq.EntityRef<Resources> _project2ResourcesTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Contracts> _project2ContractTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Stage> _project2StageTitle;
		
		private Microsoft.SharePoint.Linq.EntitySet<Tasks> _tasks;
		
		private Microsoft.SharePoint.Linq.EntitySet<Workload> _workload;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Projects() {
			this._estimation = new Microsoft.SharePoint.Linq.EntitySet<Estimation>();
			this._estimation.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Estimation>>(this.OnEstimationSync);
			this._estimation.OnChanged += new System.EventHandler(this.OnEstimationChanged);
			this._estimation.OnChanging += new System.EventHandler(this.OnEstimationChanging);
			this._projectResources = new Microsoft.SharePoint.Linq.EntitySet<ProjectResources>();
			this._projectResources.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ProjectResources>>(this.OnProjectResourcesSync);
			this._projectResources.OnChanged += new System.EventHandler(this.OnProjectResourcesChanged);
			this._projectResources.OnChanging += new System.EventHandler(this.OnProjectResourcesChanging);
			this._project2ResourcesTitle = new Microsoft.SharePoint.Linq.EntityRef<Resources>();
			this._project2ResourcesTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Resources>>(this.OnProject2ResourcesTitleSync);
			this._project2ResourcesTitle.OnChanged += new System.EventHandler(this.OnProject2ResourcesTitleChanged);
			this._project2ResourcesTitle.OnChanging += new System.EventHandler(this.OnProject2ResourcesTitleChanging);
			this._project2ContractTitle = new Microsoft.SharePoint.Linq.EntityRef<Contracts>();
			this._project2ContractTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Contracts>>(this.OnProject2ContractTitleSync);
			this._project2ContractTitle.OnChanged += new System.EventHandler(this.OnProject2ContractTitleChanged);
			this._project2ContractTitle.OnChanging += new System.EventHandler(this.OnProject2ContractTitleChanging);
			this._project2StageTitle = new Microsoft.SharePoint.Linq.EntityRef<Stage>();
			this._project2StageTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Stage>>(this.OnProject2StageTitleSync);
			this._project2StageTitle.OnChanged += new System.EventHandler(this.OnProject2StageTitleChanged);
			this._project2StageTitle.OnChanging += new System.EventHandler(this.OnProject2StageTitleChanging);
			this._tasks = new Microsoft.SharePoint.Linq.EntitySet<Tasks>();
			this._tasks.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks>>(this.OnTasksSync);
			this._tasks.OnChanged += new System.EventHandler(this.OnTasksChanged);
			this._tasks.OnChanging += new System.EventHandler(this.OnTasksChanging);
			this._workload = new Microsoft.SharePoint.Linq.EntitySet<Workload>();
			this._workload.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Workload>>(this.OnWorkloadSync);
			this._workload.OnChanged += new System.EventHandler(this.OnWorkloadChanged);
			this._workload.OnChanging += new System.EventHandler(this.OnWorkloadChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProjectNumber", Storage="_projectNumber", FieldType="Text")]
		public string ProjectNumber {
			get {
				return this._projectNumber;
			}
			set {
				if ((value != this._projectNumber)) {
					this.OnPropertyChanging("ProjectNumber", this._projectNumber);
					this._projectNumber = value;
					this.OnPropertyChanged("ProjectNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProjectHours", Storage="_projectHours", FieldType="Number")]
		public System.Nullable<double> ProjectHours {
			get {
				return this._projectHours;
			}
			set {
				if ((value != this._projectHours)) {
					this.OnPropertyChanging("ProjectHours", this._projectHours);
					this._projectHours = value;
					this.OnPropertyChanged("ProjectHours");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProjectStartDate", Storage="_projectStartDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ProjectStartDate {
			get {
				return this._projectStartDate;
			}
			set {
				if ((value != this._projectStartDate)) {
					this.OnPropertyChanging("ProjectStartDate", this._projectStartDate);
					this._projectStartDate = value;
					this.OnPropertyChanged("ProjectStartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProjectEndDate", Storage="_projectEndDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ProjectEndDate {
			get {
				return this._projectEndDate;
			}
			set {
				if ((value != this._projectEndDate)) {
					this.OnPropertyChanging("ProjectEndDate", this._projectEndDate);
					this._projectEndDate = value;
					this.OnPropertyChanged("ProjectEndDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProjectWarrantyDate", Storage="_projectWarrantyDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ProjectWarrantyDate {
			get {
				return this._projectWarrantyDate;
			}
			set {
				if ((value != this._projectWarrantyDate)) {
					this.OnPropertyChanging("ProjectWarrantyDate", this._projectWarrantyDate);
					this._projectWarrantyDate = value;
					this.OnPropertyChanged("ProjectWarrantyDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProjectBudget", Storage="_projectBudget", FieldType="Number")]
		public System.Nullable<double> ProjectBudget {
			get {
				return this._projectBudget;
			}
			set {
				if ((value != this._projectBudget)) {
					this.OnPropertyChanging("ProjectBudget", this._projectBudget);
					this._projectBudget = value;
					this.OnPropertyChanged("ProjectBudget");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProjectType", Storage="_projectType", FieldType="Choice")]
		public System.Nullable<ProjectType> ProjectType {
			get {
				return this._projectType;
			}
			set {
				if ((value != this._projectType)) {
					this.OnPropertyChanging("ProjectType", this._projectType);
					this._projectType = value;
					this.OnPropertyChanged("ProjectType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProjectYear", Storage="_projectYear", FieldType="Choice")]
		public System.Nullable<ProjectYear> ProjectYear {
			get {
				return this._projectYear;
			}
			set {
				if ((value != this._projectYear)) {
					this.OnPropertyChanging("ProjectYear", this._projectYear);
					this._projectYear = value;
					this.OnPropertyChanged("ProjectYear");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Currency", Storage="_currency", FieldType="Choice")]
		public System.Nullable<Currency> Currency {
			get {
				return this._currency;
			}
			set {
				if ((value != this._currency)) {
					this.OnPropertyChanging("Currency", this._currency);
					this._currency = value;
					this.OnPropertyChanged("Currency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Estimation2ProjectTitle", Storage="_estimation", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Estimation")]
		public Microsoft.SharePoint.Linq.EntitySet<Estimation> Estimation {
			get {
				return this._estimation;
			}
			set {
				this._estimation.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ProjectResources2ProjectTitle", Storage="_projectResources", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Project resources")]
		public Microsoft.SharePoint.Linq.EntitySet<ProjectResources> ProjectResources {
			get {
				return this._projectResources;
			}
			set {
				this._projectResources.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Project2ResourcesTitle", Storage="_project2ResourcesTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Resources")]
		public Resources Project2ResourcesTitle {
			get {
				return this._project2ResourcesTitle.GetEntity();
			}
			set {
				this._project2ResourcesTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Project2ContractTitle", Storage="_project2ContractTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Contracts")]
		public Contracts Project2ContractTitle {
			get {
				return this._project2ContractTitle.GetEntity();
			}
			set {
				this._project2ContractTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Project2StageTitle", Storage="_project2StageTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Stage")]
		public Stage Project2StageTitle {
			get {
				return this._project2StageTitle.GetEntity();
			}
			set {
				this._project2StageTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2ProjectTitle", Storage="_tasks", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Task")]
		public Microsoft.SharePoint.Linq.EntitySet<Tasks> Tasks {
			get {
				return this._tasks;
			}
			set {
				this._tasks.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Workload2ProjectTitle", Storage="_workload", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Workload")]
		public Microsoft.SharePoint.Linq.EntitySet<Workload> Workload {
			get {
				return this._workload;
			}
			set {
				this._workload.Assign(value);
			}
		}
		
		private void OnEstimationChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Estimation", this._estimation.Clone());
		}
		
		private void OnEstimationChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Estimation");
		}
		
		private void OnEstimationSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Estimation> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Estimation2ProjectTitle = this;
			}
			else {
				e.Item.Estimation2ProjectTitle = null;
			}
		}
		
		private void OnProjectResourcesChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ProjectResources", this._projectResources.Clone());
		}
		
		private void OnProjectResourcesChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ProjectResources");
		}
		
		private void OnProjectResourcesSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ProjectResources> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ProjectResources2ProjectTitle = this;
			}
			else {
				e.Item.ProjectResources2ProjectTitle = null;
			}
		}
		
		private void OnProject2ResourcesTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Project2ResourcesTitle", this._project2ResourcesTitle.Clone());
		}
		
		private void OnProject2ResourcesTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Project2ResourcesTitle");
		}
		
		private void OnProject2ResourcesTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Resources> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Projects.Add(this);
			}
			else {
				e.Item.Projects.Remove(this);
			}
		}
		
		private void OnProject2ContractTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Project2ContractTitle", this._project2ContractTitle.Clone());
		}
		
		private void OnProject2ContractTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Project2ContractTitle");
		}
		
		private void OnProject2ContractTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Contracts> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Projects.Add(this);
			}
			else {
				e.Item.Projects.Remove(this);
			}
		}
		
		private void OnProject2StageTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Project2StageTitle", this._project2StageTitle.Clone());
		}
		
		private void OnProject2StageTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Project2StageTitle");
		}
		
		private void OnProject2StageTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Stage> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Projects.Add(this);
			}
			else {
				e.Item.Projects.Remove(this);
			}
		}
		
		private void OnTasksChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Tasks", this._tasks.Clone());
		}
		
		private void OnTasksChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Tasks");
		}
		
		private void OnTasksSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Task2ProjectTitle = this;
			}
			else {
				e.Item.Task2ProjectTitle = null;
			}
		}
		
		private void OnWorkloadChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Workload", this._workload.Clone());
		}
		
		private void OnWorkloadChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Workload");
		}
		
		private void OnWorkloadSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Workload> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Workload2ProjectTitle = this;
			}
			else {
				e.Item.Workload2ProjectTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Resolution Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Resolution", Id="0x010088405BE8A9C847F89E13957FBA7E2D59")]
	internal partial class Resolution : Element {
		
		private Microsoft.SharePoint.Linq.EntitySet<Tasks> _tasks;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Resolution() {
			this._tasks = new Microsoft.SharePoint.Linq.EntitySet<Tasks>();
			this._tasks.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks>>(this.OnTasksSync);
			this._tasks.OnChanged += new System.EventHandler(this.OnTasksChanged);
			this._tasks.OnChanging += new System.EventHandler(this.OnTasksChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2SResolutionTitle", Storage="_tasks", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Task")]
		public Microsoft.SharePoint.Linq.EntitySet<Tasks> Tasks {
			get {
				return this._tasks;
			}
			set {
				this._tasks.Assign(value);
			}
		}
		
		private void OnTasksChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Tasks", this._tasks.Clone());
		}
		
		private void OnTasksChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Tasks");
		}
		
		private void OnTasksSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Task2SResolutionTitle = this;
			}
			else {
				e.Item.Task2SResolutionTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Resources Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Resources", Id="0x010091A504EC7E3342BDB25EFEB93B60A5FA")]
	internal partial class Resources : Element {
		
		private string _jobTitle;
		
		private string _eMail;
		
		private Microsoft.SharePoint.Linq.EntitySet<Estimation> _estimation;
		
		private Microsoft.SharePoint.Linq.EntitySet<ProjectResources> _projectResources;
		
		private Microsoft.SharePoint.Linq.EntitySet<Projects> _projects;
		
		private Microsoft.SharePoint.Linq.EntityRef<Element> _employeeADAccount;
		
		private Microsoft.SharePoint.Linq.EntitySet<Tasks> _tasks;
		
		private Microsoft.SharePoint.Linq.EntitySet<Workload> _workload;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Resources() {
			this._estimation = new Microsoft.SharePoint.Linq.EntitySet<Estimation>();
			this._estimation.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Estimation>>(this.OnEstimationSync);
			this._estimation.OnChanged += new System.EventHandler(this.OnEstimationChanged);
			this._estimation.OnChanging += new System.EventHandler(this.OnEstimationChanging);
			this._projectResources = new Microsoft.SharePoint.Linq.EntitySet<ProjectResources>();
			this._projectResources.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ProjectResources>>(this.OnProjectResourcesSync);
			this._projectResources.OnChanged += new System.EventHandler(this.OnProjectResourcesChanged);
			this._projectResources.OnChanging += new System.EventHandler(this.OnProjectResourcesChanging);
			this._projects = new Microsoft.SharePoint.Linq.EntitySet<Projects>();
			this._projects.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Projects>>(this.OnProjectsSync);
			this._projects.OnChanged += new System.EventHandler(this.OnProjectsChanged);
			this._projects.OnChanging += new System.EventHandler(this.OnProjectsChanging);
			this._employeeADAccount = new Microsoft.SharePoint.Linq.EntityRef<Element>();
			this._employeeADAccount.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Element>>(this.OnEmployeeADAccountSync);
			this._employeeADAccount.OnChanged += new System.EventHandler(this.OnEmployeeADAccountChanged);
			this._employeeADAccount.OnChanging += new System.EventHandler(this.OnEmployeeADAccountChanging);
			this._tasks = new Microsoft.SharePoint.Linq.EntitySet<Tasks>();
			this._tasks.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks>>(this.OnTasksSync);
			this._tasks.OnChanged += new System.EventHandler(this.OnTasksChanged);
			this._tasks.OnChanging += new System.EventHandler(this.OnTasksChanging);
			this._workload = new Microsoft.SharePoint.Linq.EntitySet<Workload>();
			this._workload.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Workload>>(this.OnWorkloadSync);
			this._workload.OnChanged += new System.EventHandler(this.OnWorkloadChanged);
			this._workload.OnChanging += new System.EventHandler(this.OnWorkloadChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="JobTitle", Storage="_jobTitle", FieldType="Text")]
		public string JobTitle {
			get {
				return this._jobTitle;
			}
			set {
				if ((value != this._jobTitle)) {
					this.OnPropertyChanging("JobTitle", this._jobTitle);
					this._jobTitle = value;
					this.OnPropertyChanged("JobTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EMail", Storage="_eMail", FieldType="Text")]
		public string EMail {
			get {
				return this._eMail;
			}
			set {
				if ((value != this._eMail)) {
					this.OnPropertyChanging("EMail", this._eMail);
					this._eMail = value;
					this.OnPropertyChanged("EMail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Estimation2ResourcesTitle", Storage="_estimation", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Estimation")]
		public Microsoft.SharePoint.Linq.EntitySet<Estimation> Estimation {
			get {
				return this._estimation;
			}
			set {
				this._estimation.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ProjectResources2ResourcesTitle", Storage="_projectResources", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Project resources")]
		public Microsoft.SharePoint.Linq.EntitySet<ProjectResources> ProjectResources {
			get {
				return this._projectResources;
			}
			set {
				this._projectResources.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Project2ResourcesTitle", Storage="_projects", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Projects")]
		public Microsoft.SharePoint.Linq.EntitySet<Projects> Projects {
			get {
				return this._projects;
			}
			set {
				this._projects.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="EmployeeADAccount", Storage="_employeeADAccount", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="User Information List")]
		public Element EmployeeADAccount {
			get {
				return this._employeeADAccount.GetEntity();
			}
			set {
				this._employeeADAccount.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2ResourcesTitle", Storage="_tasks", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Task")]
		public Microsoft.SharePoint.Linq.EntitySet<Tasks> Tasks {
			get {
				return this._tasks;
			}
			set {
				this._tasks.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Workload2ResourcesTitle", Storage="_workload", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Workload")]
		public Microsoft.SharePoint.Linq.EntitySet<Workload> Workload {
			get {
				return this._workload;
			}
			set {
				this._workload.Assign(value);
			}
		}
		
		private void OnEstimationChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Estimation", this._estimation.Clone());
		}
		
		private void OnEstimationChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Estimation");
		}
		
		private void OnEstimationSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Estimation> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Estimation2ResourcesTitle = this;
			}
			else {
				e.Item.Estimation2ResourcesTitle = null;
			}
		}
		
		private void OnProjectResourcesChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ProjectResources", this._projectResources.Clone());
		}
		
		private void OnProjectResourcesChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ProjectResources");
		}
		
		private void OnProjectResourcesSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ProjectResources> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ProjectResources2ResourcesTitle = this;
			}
			else {
				e.Item.ProjectResources2ResourcesTitle = null;
			}
		}
		
		private void OnProjectsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Projects", this._projects.Clone());
		}
		
		private void OnProjectsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Projects");
		}
		
		private void OnProjectsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Projects> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Project2ResourcesTitle = this;
			}
			else {
				e.Item.Project2ResourcesTitle = null;
			}
		}
		
		private void OnEmployeeADAccountChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeeADAccount", this._employeeADAccount.Clone());
		}
		
		private void OnEmployeeADAccountChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeeADAccount");
		}
		
		private void OnEmployeeADAccountSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Element> e) {
		}
		
		private void OnTasksChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Tasks", this._tasks.Clone());
		}
		
		private void OnTasksChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Tasks");
		}
		
		private void OnTasksSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Task2ResourcesTitle = this;
			}
			else {
				e.Item.Task2ResourcesTitle = null;
			}
		}
		
		private void OnWorkloadChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Workload", this._workload.Clone());
		}
		
		private void OnWorkloadChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Workload");
		}
		
		private void OnWorkloadSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Workload> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Workload2ResourcesTitle = this;
			}
			else {
				e.Item.Workload2ResourcesTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Stage Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Stage", Id="0x010085603184410F43E88BC6CCE5BE613389")]
	internal partial class Stage : Element {
		
		private Microsoft.SharePoint.Linq.EntitySet<Milestone> _milestone;
		
		private Microsoft.SharePoint.Linq.EntitySet<Projects> _projects;
		
		private Microsoft.SharePoint.Linq.EntitySet<Workload> _workload;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Stage() {
			this._milestone = new Microsoft.SharePoint.Linq.EntitySet<Milestone>();
			this._milestone.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Milestone>>(this.OnMilestoneSync);
			this._milestone.OnChanged += new System.EventHandler(this.OnMilestoneChanged);
			this._milestone.OnChanging += new System.EventHandler(this.OnMilestoneChanging);
			this._projects = new Microsoft.SharePoint.Linq.EntitySet<Projects>();
			this._projects.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Projects>>(this.OnProjectsSync);
			this._projects.OnChanged += new System.EventHandler(this.OnProjectsChanged);
			this._projects.OnChanging += new System.EventHandler(this.OnProjectsChanging);
			this._workload = new Microsoft.SharePoint.Linq.EntitySet<Workload>();
			this._workload.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Workload>>(this.OnWorkloadSync);
			this._workload.OnChanged += new System.EventHandler(this.OnWorkloadChanged);
			this._workload.OnChanging += new System.EventHandler(this.OnWorkloadChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Milestone2StageTitle", Storage="_milestone", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Milestone")]
		public Microsoft.SharePoint.Linq.EntitySet<Milestone> Milestone {
			get {
				return this._milestone;
			}
			set {
				this._milestone.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Project2StageTitle", Storage="_projects", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Projects")]
		public Microsoft.SharePoint.Linq.EntitySet<Projects> Projects {
			get {
				return this._projects;
			}
			set {
				this._projects.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Workload2StageTitle", Storage="_workload", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Workload")]
		public Microsoft.SharePoint.Linq.EntitySet<Workload> Workload {
			get {
				return this._workload;
			}
			set {
				this._workload.Assign(value);
			}
		}
		
		private void OnMilestoneChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Milestone", this._milestone.Clone());
		}
		
		private void OnMilestoneChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Milestone");
		}
		
		private void OnMilestoneSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Milestone> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Milestone2StageTitle = this;
			}
			else {
				e.Item.Milestone2StageTitle = null;
			}
		}
		
		private void OnProjectsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Projects", this._projects.Clone());
		}
		
		private void OnProjectsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Projects");
		}
		
		private void OnProjectsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Projects> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Project2StageTitle = this;
			}
			else {
				e.Item.Project2StageTitle = null;
			}
		}
		
		private void OnWorkloadChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Workload", this._workload.Clone());
		}
		
		private void OnWorkloadChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Workload");
		}
		
		private void OnWorkloadSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Workload> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Workload2StageTitle = this;
			}
			else {
				e.Item.Workload2StageTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Status Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Status", Id="0x0100798F904919E54652B0BBC121E7F6A818")]
	internal partial class Status : Element {
		
		private Microsoft.SharePoint.Linq.EntitySet<Tasks> _tasks;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Status() {
			this._tasks = new Microsoft.SharePoint.Linq.EntitySet<Tasks>();
			this._tasks.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks>>(this.OnTasksSync);
			this._tasks.OnChanged += new System.EventHandler(this.OnTasksChanged);
			this._tasks.OnChanging += new System.EventHandler(this.OnTasksChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2StatusTitle", Storage="_tasks", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Task")]
		public Microsoft.SharePoint.Linq.EntitySet<Tasks> Tasks {
			get {
				return this._tasks;
			}
			set {
				this._tasks.Assign(value);
			}
		}
		
		private void OnTasksChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Tasks", this._tasks.Clone());
		}
		
		private void OnTasksChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Tasks");
		}
		
		private void OnTasksSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Task2StatusTitle = this;
			}
			else {
				e.Item.Task2StatusTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Tasks Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Tasks", Id="0x01005D39260836CE498D8E0D443AD5CAD3AC")]
	internal partial class Tasks : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<Projects> _task2ProjectTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Resources> _task2ResourcesTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Milestone> _task2MilestoneDefinedInTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Milestone> _task2MilestoneResolvedInTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Status> _task2StatusTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Priority> _task2SPriorityTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Resolution> _task2SResolutionTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Type> _task2TypeTitle;
		
		private Microsoft.SharePoint.Linq.EntitySet<TaskComments> _taskComments;
		
		private Microsoft.SharePoint.Linq.EntitySet<Workload> _workload;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Tasks() {
			this._task2ProjectTitle = new Microsoft.SharePoint.Linq.EntityRef<Projects>();
			this._task2ProjectTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Projects>>(this.OnTask2ProjectTitleSync);
			this._task2ProjectTitle.OnChanged += new System.EventHandler(this.OnTask2ProjectTitleChanged);
			this._task2ProjectTitle.OnChanging += new System.EventHandler(this.OnTask2ProjectTitleChanging);
			this._task2ResourcesTitle = new Microsoft.SharePoint.Linq.EntityRef<Resources>();
			this._task2ResourcesTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Resources>>(this.OnTask2ResourcesTitleSync);
			this._task2ResourcesTitle.OnChanged += new System.EventHandler(this.OnTask2ResourcesTitleChanged);
			this._task2ResourcesTitle.OnChanging += new System.EventHandler(this.OnTask2ResourcesTitleChanging);
			this._task2MilestoneDefinedInTitle = new Microsoft.SharePoint.Linq.EntityRef<Milestone>();
			this._task2MilestoneDefinedInTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Milestone>>(this.OnTask2MilestoneDefinedInTitleSync);
			this._task2MilestoneDefinedInTitle.OnChanged += new System.EventHandler(this.OnTask2MilestoneDefinedInTitleChanged);
			this._task2MilestoneDefinedInTitle.OnChanging += new System.EventHandler(this.OnTask2MilestoneDefinedInTitleChanging);
			this._task2MilestoneResolvedInTitle = new Microsoft.SharePoint.Linq.EntityRef<Milestone>();
			this._task2MilestoneResolvedInTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Milestone>>(this.OnTask2MilestoneResolvedInTitleSync);
			this._task2MilestoneResolvedInTitle.OnChanged += new System.EventHandler(this.OnTask2MilestoneResolvedInTitleChanged);
			this._task2MilestoneResolvedInTitle.OnChanging += new System.EventHandler(this.OnTask2MilestoneResolvedInTitleChanging);
			this._task2StatusTitle = new Microsoft.SharePoint.Linq.EntityRef<Status>();
			this._task2StatusTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Status>>(this.OnTask2StatusTitleSync);
			this._task2StatusTitle.OnChanged += new System.EventHandler(this.OnTask2StatusTitleChanged);
			this._task2StatusTitle.OnChanging += new System.EventHandler(this.OnTask2StatusTitleChanging);
			this._task2SPriorityTitle = new Microsoft.SharePoint.Linq.EntityRef<Priority>();
			this._task2SPriorityTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Priority>>(this.OnTask2SPriorityTitleSync);
			this._task2SPriorityTitle.OnChanged += new System.EventHandler(this.OnTask2SPriorityTitleChanged);
			this._task2SPriorityTitle.OnChanging += new System.EventHandler(this.OnTask2SPriorityTitleChanging);
			this._task2SResolutionTitle = new Microsoft.SharePoint.Linq.EntityRef<Resolution>();
			this._task2SResolutionTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Resolution>>(this.OnTask2SResolutionTitleSync);
			this._task2SResolutionTitle.OnChanged += new System.EventHandler(this.OnTask2SResolutionTitleChanged);
			this._task2SResolutionTitle.OnChanging += new System.EventHandler(this.OnTask2SResolutionTitleChanging);
			this._task2TypeTitle = new Microsoft.SharePoint.Linq.EntityRef<Type>();
			this._task2TypeTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Type>>(this.OnTask2TypeTitleSync);
			this._task2TypeTitle.OnChanged += new System.EventHandler(this.OnTask2TypeTitleChanged);
			this._task2TypeTitle.OnChanging += new System.EventHandler(this.OnTask2TypeTitleChanging);
			this._taskComments = new Microsoft.SharePoint.Linq.EntitySet<TaskComments>();
			this._taskComments.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TaskComments>>(this.OnTaskCommentsSync);
			this._taskComments.OnChanged += new System.EventHandler(this.OnTaskCommentsChanged);
			this._taskComments.OnChanging += new System.EventHandler(this.OnTaskCommentsChanging);
			this._workload = new Microsoft.SharePoint.Linq.EntitySet<Workload>();
			this._workload.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Workload>>(this.OnWorkloadSync);
			this._workload.OnChanged += new System.EventHandler(this.OnWorkloadChanged);
			this._workload.OnChanging += new System.EventHandler(this.OnWorkloadChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2ProjectTitle", Storage="_task2ProjectTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Projects")]
		public Projects Task2ProjectTitle {
			get {
				return this._task2ProjectTitle.GetEntity();
			}
			set {
				this._task2ProjectTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2ResourcesTitle", Storage="_task2ResourcesTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Resources")]
		public Resources Task2ResourcesTitle {
			get {
				return this._task2ResourcesTitle.GetEntity();
			}
			set {
				this._task2ResourcesTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2MilestoneDefinedInTitle", Storage="_task2MilestoneDefinedInTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Milestone")]
		public Milestone Task2MilestoneDefinedInTitle {
			get {
				return this._task2MilestoneDefinedInTitle.GetEntity();
			}
			set {
				this._task2MilestoneDefinedInTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2MilestoneResolvedInTitle", Storage="_task2MilestoneResolvedInTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Milestone")]
		public Milestone Task2MilestoneResolvedInTitle {
			get {
				return this._task2MilestoneResolvedInTitle.GetEntity();
			}
			set {
				this._task2MilestoneResolvedInTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2StatusTitle", Storage="_task2StatusTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Status")]
		public Status Task2StatusTitle {
			get {
				return this._task2StatusTitle.GetEntity();
			}
			set {
				this._task2StatusTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2SPriorityTitle", Storage="_task2SPriorityTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Priority")]
		public Priority Task2SPriorityTitle {
			get {
				return this._task2SPriorityTitle.GetEntity();
			}
			set {
				this._task2SPriorityTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2SResolutionTitle", Storage="_task2SResolutionTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Resolution")]
		public Resolution Task2SResolutionTitle {
			get {
				return this._task2SResolutionTitle.GetEntity();
			}
			set {
				this._task2SResolutionTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2TypeTitle", Storage="_task2TypeTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Type")]
		public Type Task2TypeTitle {
			get {
				return this._task2TypeTitle.GetEntity();
			}
			set {
				this._task2TypeTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TaskComments2TaskTitle", Storage="_taskComments", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Task comments")]
		public Microsoft.SharePoint.Linq.EntitySet<TaskComments> TaskComments {
			get {
				return this._taskComments;
			}
			set {
				this._taskComments.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Workload2TaskTitle", Storage="_workload", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Workload")]
		public Microsoft.SharePoint.Linq.EntitySet<Workload> Workload {
			get {
				return this._workload;
			}
			set {
				this._workload.Assign(value);
			}
		}
		
		private void OnTask2ProjectTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Task2ProjectTitle", this._task2ProjectTitle.Clone());
		}
		
		private void OnTask2ProjectTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Task2ProjectTitle");
		}
		
		private void OnTask2ProjectTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Projects> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Tasks.Add(this);
			}
			else {
				e.Item.Tasks.Remove(this);
			}
		}
		
		private void OnTask2ResourcesTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Task2ResourcesTitle", this._task2ResourcesTitle.Clone());
		}
		
		private void OnTask2ResourcesTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Task2ResourcesTitle");
		}
		
		private void OnTask2ResourcesTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Resources> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Tasks.Add(this);
			}
			else {
				e.Item.Tasks.Remove(this);
			}
		}
		
		private void OnTask2MilestoneDefinedInTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Task2MilestoneDefinedInTitle", this._task2MilestoneDefinedInTitle.Clone());
		}
		
		private void OnTask2MilestoneDefinedInTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Task2MilestoneDefinedInTitle");
		}
		
		private void OnTask2MilestoneDefinedInTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Milestone> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Tasks.Add(this);
			}
			else {
				e.Item.Tasks.Remove(this);
			}
		}
		
		private void OnTask2MilestoneResolvedInTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Task2MilestoneResolvedInTitle", this._task2MilestoneResolvedInTitle.Clone());
		}
		
		private void OnTask2MilestoneResolvedInTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Task2MilestoneResolvedInTitle");
		}
		
		private void OnTask2MilestoneResolvedInTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Milestone> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Tasks0.Add(this);
			}
			else {
				e.Item.Tasks0.Remove(this);
			}
		}
		
		private void OnTask2StatusTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Task2StatusTitle", this._task2StatusTitle.Clone());
		}
		
		private void OnTask2StatusTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Task2StatusTitle");
		}
		
		private void OnTask2StatusTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Status> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Tasks.Add(this);
			}
			else {
				e.Item.Tasks.Remove(this);
			}
		}
		
		private void OnTask2SPriorityTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Task2SPriorityTitle", this._task2SPriorityTitle.Clone());
		}
		
		private void OnTask2SPriorityTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Task2SPriorityTitle");
		}
		
		private void OnTask2SPriorityTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Priority> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Tasks.Add(this);
			}
			else {
				e.Item.Tasks.Remove(this);
			}
		}
		
		private void OnTask2SResolutionTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Task2SResolutionTitle", this._task2SResolutionTitle.Clone());
		}
		
		private void OnTask2SResolutionTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Task2SResolutionTitle");
		}
		
		private void OnTask2SResolutionTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Resolution> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Tasks.Add(this);
			}
			else {
				e.Item.Tasks.Remove(this);
			}
		}
		
		private void OnTask2TypeTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Task2TypeTitle", this._task2TypeTitle.Clone());
		}
		
		private void OnTask2TypeTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Task2TypeTitle");
		}
		
		private void OnTask2TypeTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Type> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Tasks.Add(this);
			}
			else {
				e.Item.Tasks.Remove(this);
			}
		}
		
		private void OnTaskCommentsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TaskComments", this._taskComments.Clone());
		}
		
		private void OnTaskCommentsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TaskComments");
		}
		
		private void OnTaskCommentsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TaskComments> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TaskComments2TaskTitle = this;
			}
			else {
				e.Item.TaskComments2TaskTitle = null;
			}
		}
		
		private void OnWorkloadChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Workload", this._workload.Clone());
		}
		
		private void OnWorkloadChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Workload");
		}
		
		private void OnWorkloadSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Workload> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Workload2TaskTitle = this;
			}
			else {
				e.Item.Workload2TaskTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Task Comments Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TaskComments", Id="0x0100E615647B0FDE44E6AE8B778DFC56438D")]
	internal partial class TaskComments : Element {
		
		private string _body;
		
		private Microsoft.SharePoint.Linq.EntityRef<Tasks> _taskComments2TaskTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TaskComments() {
			this._taskComments2TaskTitle = new Microsoft.SharePoint.Linq.EntityRef<Tasks>();
			this._taskComments2TaskTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks>>(this.OnTaskComments2TaskTitleSync);
			this._taskComments2TaskTitle.OnChanged += new System.EventHandler(this.OnTaskComments2TaskTitleChanged);
			this._taskComments2TaskTitle.OnChanging += new System.EventHandler(this.OnTaskComments2TaskTitleChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości TaskComments.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości TaskComments.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TaskComments2TaskTitle", Storage="_taskComments2TaskTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Task")]
		public Tasks TaskComments2TaskTitle {
			get {
				return this._taskComments2TaskTitle.GetEntity();
			}
			set {
				this._taskComments2TaskTitle.SetEntity(value);
			}
		}
		
		private void OnTaskComments2TaskTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TaskComments2TaskTitle", this._taskComments2TaskTitle.Clone());
		}
		
		private void OnTaskComments2TaskTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TaskComments2TaskTitle");
		}
		
		private void OnTaskComments2TaskTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TaskComments.Add(this);
			}
			else {
				e.Item.TaskComments.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Type Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Type", Id="0x01004D5362E631BA41C39E9A3D2364D55EFB")]
	internal partial class Type : Element {
		
		private Microsoft.SharePoint.Linq.EntitySet<Tasks> _tasks;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Type() {
			this._tasks = new Microsoft.SharePoint.Linq.EntitySet<Tasks>();
			this._tasks.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks>>(this.OnTasksSync);
			this._tasks.OnChanged += new System.EventHandler(this.OnTasksChanged);
			this._tasks.OnChanging += new System.EventHandler(this.OnTasksChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Task2TypeTitle", Storage="_tasks", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Task")]
		public Microsoft.SharePoint.Linq.EntitySet<Tasks> Tasks {
			get {
				return this._tasks;
			}
			set {
				this._tasks.Assign(value);
			}
		}
		
		private void OnTasksChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Tasks", this._tasks.Clone());
		}
		
		private void OnTasksChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Tasks");
		}
		
		private void OnTasksSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Task2TypeTitle = this;
			}
			else {
				e.Item.Task2TypeTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Workload Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Workload", Id="0x0100CE075A94AA894CDAA771E6A734832A77")]
	internal partial class Workload : Element {
		
		private System.Nullable<System.DateTime> _workloadDate;
		
		private System.Nullable<double> _hours;
		
		private System.Nullable<Minutes> _minutes;
		
		private Microsoft.SharePoint.Linq.EntityRef<Projects> _workload2ProjectTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Tasks> _workload2TaskTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Stage> _workload2StageTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Resources> _workload2ResourcesTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Workload() {
			this._workload2ProjectTitle = new Microsoft.SharePoint.Linq.EntityRef<Projects>();
			this._workload2ProjectTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Projects>>(this.OnWorkload2ProjectTitleSync);
			this._workload2ProjectTitle.OnChanged += new System.EventHandler(this.OnWorkload2ProjectTitleChanged);
			this._workload2ProjectTitle.OnChanging += new System.EventHandler(this.OnWorkload2ProjectTitleChanging);
			this._workload2TaskTitle = new Microsoft.SharePoint.Linq.EntityRef<Tasks>();
			this._workload2TaskTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks>>(this.OnWorkload2TaskTitleSync);
			this._workload2TaskTitle.OnChanged += new System.EventHandler(this.OnWorkload2TaskTitleChanged);
			this._workload2TaskTitle.OnChanging += new System.EventHandler(this.OnWorkload2TaskTitleChanging);
			this._workload2StageTitle = new Microsoft.SharePoint.Linq.EntityRef<Stage>();
			this._workload2StageTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Stage>>(this.OnWorkload2StageTitleSync);
			this._workload2StageTitle.OnChanged += new System.EventHandler(this.OnWorkload2StageTitleChanged);
			this._workload2StageTitle.OnChanging += new System.EventHandler(this.OnWorkload2StageTitleChanging);
			this._workload2ResourcesTitle = new Microsoft.SharePoint.Linq.EntityRef<Resources>();
			this._workload2ResourcesTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Resources>>(this.OnWorkload2ResourcesTitleSync);
			this._workload2ResourcesTitle.OnChanged += new System.EventHandler(this.OnWorkload2ResourcesTitleChanged);
			this._workload2ResourcesTitle.OnChanging += new System.EventHandler(this.OnWorkload2ResourcesTitleChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkloadDate", Storage="_workloadDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> WorkloadDate {
			get {
				return this._workloadDate;
			}
			set {
				if ((value != this._workloadDate)) {
					this.OnPropertyChanging("WorkloadDate", this._workloadDate);
					this._workloadDate = value;
					this.OnPropertyChanged("WorkloadDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Hours", Storage="_hours", FieldType="Number")]
		public System.Nullable<double> Hours {
			get {
				return this._hours;
			}
			set {
				if ((value != this._hours)) {
					this.OnPropertyChanging("Hours", this._hours);
					this._hours = value;
					this.OnPropertyChanged("Hours");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Minutes", Storage="_minutes", FieldType="Choice")]
		public System.Nullable<Minutes> Minutes {
			get {
				return this._minutes;
			}
			set {
				if ((value != this._minutes)) {
					this.OnPropertyChanging("Minutes", this._minutes);
					this._minutes = value;
					this.OnPropertyChanged("Minutes");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Workload2ProjectTitle", Storage="_workload2ProjectTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Projects")]
		public Projects Workload2ProjectTitle {
			get {
				return this._workload2ProjectTitle.GetEntity();
			}
			set {
				this._workload2ProjectTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Workload2TaskTitle", Storage="_workload2TaskTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Task")]
		public Tasks Workload2TaskTitle {
			get {
				return this._workload2TaskTitle.GetEntity();
			}
			set {
				this._workload2TaskTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Workload2StageTitle", Storage="_workload2StageTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Stage")]
		public Stage Workload2StageTitle {
			get {
				return this._workload2StageTitle.GetEntity();
			}
			set {
				this._workload2StageTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Workload2ResourcesTitle", Storage="_workload2ResourcesTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Resources")]
		public Resources Workload2ResourcesTitle {
			get {
				return this._workload2ResourcesTitle.GetEntity();
			}
			set {
				this._workload2ResourcesTitle.SetEntity(value);
			}
		}
		
		private void OnWorkload2ProjectTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Workload2ProjectTitle", this._workload2ProjectTitle.Clone());
		}
		
		private void OnWorkload2ProjectTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Workload2ProjectTitle");
		}
		
		private void OnWorkload2ProjectTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Projects> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Workload.Add(this);
			}
			else {
				e.Item.Workload.Remove(this);
			}
		}
		
		private void OnWorkload2TaskTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Workload2TaskTitle", this._workload2TaskTitle.Clone());
		}
		
		private void OnWorkload2TaskTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Workload2TaskTitle");
		}
		
		private void OnWorkload2TaskTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Tasks> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Workload.Add(this);
			}
			else {
				e.Item.Workload.Remove(this);
			}
		}
		
		private void OnWorkload2StageTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Workload2StageTitle", this._workload2StageTitle.Clone());
		}
		
		private void OnWorkload2StageTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Workload2StageTitle");
		}
		
		private void OnWorkload2StageTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Stage> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Workload.Add(this);
			}
			else {
				e.Item.Workload.Remove(this);
			}
		}
		
		private void OnWorkload2ResourcesTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Workload2ResourcesTitle", this._workload2ResourcesTitle.Clone());
		}
		
		private void OnWorkload2ResourcesTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Workload2ResourcesTitle");
		}
		
		private void OnWorkload2ResourcesTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Resources> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Workload.Add(this);
			}
			else {
				e.Item.Workload.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowe spotkanie, termin ostateczny lub inne wydarzenie.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Wydarzenie", Id="0x0102", List="Calendar")]
	internal partial class CalendarWydarzenie : Wydarzenie {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CalendarWydarzenie() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EventDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public override System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Note")]
		public override string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
	}
	
	/// <summary>
	/// Śledź element pracy, który musi wykonać użytkownik lub jego zespół.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Zadanie", Id="0x0108", List="Tasks")]
	internal partial class TasksZadanie : Zadanie {
		
		private Microsoft.SharePoint.Linq.EntitySet<Element> _poprzedniki;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TasksZadanie() {
			this._poprzedniki = new Microsoft.SharePoint.Linq.EntitySet<Element>();
			this._poprzedniki.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Element>>(this.OnPoprzednikiSync);
			this._poprzedniki.OnChanged += new System.EventHandler(this.OnPoprzednikiChanged);
			this._poprzedniki.OnChanging += new System.EventHandler(this.OnPoprzednikiChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dataUkończenia", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DataUkończenia {
			get {
				return this._dataUkończenia;
			}
			set {
				if ((value != this._dataUkończenia)) {
					this.OnPropertyChanging("DataUkończenia", this._dataUkończenia);
					this._dataUkończenia = value;
					this.OnPropertyChanged("DataUkończenia");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_stanZadania", FieldType="Choice")]
		public override System.Nullable<StanZadania> StanZadania {
			get {
				return this._stanZadania;
			}
			set {
				if ((value != this._stanZadania)) {
					this.OnPropertyChanging("StanZadania", this._stanZadania);
					this._stanZadania = value;
					this.OnPropertyChanged("StanZadania");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_poprzedniki", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Element> Poprzedniki {
			get {
				return this._poprzedniki;
			}
			set {
				this._poprzedniki.Assign(value);
			}
		}
		
		private void OnPoprzednikiChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Poprzedniki", this._poprzedniki.Clone());
		}
		
		private void OnPoprzednikiChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Poprzedniki");
		}
		
		private void OnPoprzednikiSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Element> e) {
		}
	}
	
	/// <summary>
	/// Utwórz nową stronę wzorcową.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Strona wzorcowa", Id="0x010105", List="Master Page Gallery")]
	internal partial class MasterPageGalleryStronaWzorcowa : StronaWzorcowa {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public MasterPageGalleryStronaWzorcowa() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MasterPageDescription", Storage="_description", FieldType="Note")]
		public override string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Strona wzorcowa.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Strona wzorcowa.");
			}
		}
	}
	
	/// <summary>
	/// Grupuj i opisuj zadania pokrewne, które masz wykonać lub które ma wykonać zespół.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Zadanie sumaryczne", Id="0x012004", List="Tasks")]
	internal partial class TasksZadanieSumaryczne : ZadanieSumaryczne {
		
		private Microsoft.SharePoint.Linq.EntitySet<Element> _poprzedniki;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TasksZadanieSumaryczne() {
			this._poprzedniki = new Microsoft.SharePoint.Linq.EntitySet<Element>();
			this._poprzedniki.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Element>>(this.OnPoprzednikiSync);
			this._poprzedniki.OnChanged += new System.EventHandler(this.OnPoprzednikiChanged);
			this._poprzedniki.OnChanging += new System.EventHandler(this.OnPoprzednikiChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dataUkończenia", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DataUkończenia {
			get {
				return this._dataUkończenia;
			}
			set {
				if ((value != this._dataUkończenia)) {
					this.OnPropertyChanging("DataUkończenia", this._dataUkończenia);
					this._dataUkończenia = value;
					this.OnPropertyChanged("DataUkończenia");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_stanZadania", FieldType="Choice")]
		public override System.Nullable<StanZadania> StanZadania {
			get {
				return this._stanZadania;
			}
			set {
				if ((value != this._stanZadania)) {
					this.OnPropertyChanging("StanZadania", this._stanZadania);
					this._stanZadania = value;
					this.OnPropertyChanged("StanZadania");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_poprzedniki", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Element> Poprzedniki {
			get {
				return this._poprzedniki;
			}
			set {
				this._poprzedniki.Assign(value);
			}
		}
		
		private void OnPoprzednikiChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Poprzedniki", this._poprzedniki.Clone());
		}
		
		private void OnPoprzednikiChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Poprzedniki");
		}
		
		private void OnPoprzednikiSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Element> e) {
		}
	}
	
	internal enum Kategoria : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) Category1")]
		_1Category1 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Category2")]
		_2Category2 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Category3")]
		_3Category3 = 8,
	}
	
	internal enum Priorytet : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) High")]
		_1High = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Normal")]
		_2Normal = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Low")]
		_3Low = 8,
	}
	
	internal enum StanZadania : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Not Started")]
		NotStarted = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="In Progress")]
		InProgress = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Completed")]
		Completed = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Deferred")]
		Deferred = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Waiting on someone else")]
		WaitingOnSomeoneElse = 32,
	}
	
	[System.FlagsAttribute()]
	internal enum UIVersion : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="3")]
		_3 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="4")]
		_4 = 4,
	}
	
	internal enum Currency : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="PLN")]
		PLN = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="USD")]
		USD = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="EUR")]
		EUR = 8,
	}
	
	internal enum ProjectType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Office")]
		Office = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Marketing")]
		Marketing = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Project - commercial")]
		ProjectCommercial = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Project - internal")]
		ProjectInternal = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Project - conception")]
		ProjectConception = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="After sales services")]
		AfterSalesServices = 64,
	}
	
	internal enum ProjectYear : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2012")]
		_2012 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2013")]
		_2013 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2014")]
		_2014 = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2015")]
		_2015 = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2016")]
		_2016 = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2017")]
		_2017 = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2018")]
		_2018 = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2019")]
		_2019 = 256,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2020")]
		_2020 = 512,
	}
	
	internal enum Minutes : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="00")]
		_00 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="15")]
		_15 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="30")]
		_30 = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="45")]
		_45 = 16,
	}
}
